{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\Web_pro_2024\\\\web_pro\\\\src\\\\components\\\\Course\\\\Course_2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Nav from '../Nav';\nimport { useSelector } from 'react-redux';\nimport StarRatingComponent from 'react-star-rating-component';\nimport { Line } from 'react-chartjs-2'; // We will use Line chart for both datasets\nimport 'chart.js/auto'; // Import Chart.js\nimport \"./Course_2.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Course_2() {\n  _s();\n  const [year, setYear] = useState(1);\n  const [curriculum, setCurriculum] = useState(null);\n  const [isReturningUser, setIsReturningUser] = useState(false);\n  const [selectedSubject, setSelectedSubject] = useState(null);\n  const [showPopup, setShowPopup] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [ratings, setRatings] = useState({});\n  const [career, setCareer] = useState(''); // Hold the career from backend\n  const [careerRequirement, setCareerRequirement] = useState(3.5); // Default requirement for Software Engineer\n\n  const profile = useSelector(state => state.profile);\n  useEffect(() => {\n    if (profile && profile.email) {\n      axios.get(`http://localhost:8000/api/user/${encodeURIComponent(profile.email)}`).then(res => {\n        setCurriculum(res.data.curriculum);\n        setYear(res.data.user.year);\n        setCareer(res.data.user.career || \"No career selected\");\n        setIsReturningUser(true);\n        if (res.data.user && res.data.user.ratings) {\n          const updatedRatings = {};\n          res.data.curriculum.subjects.forEach(subject => {\n            updatedRatings[subject.name] = res.data.user.ratings[subject.name] || 0;\n          });\n          setRatings(updatedRatings);\n        }\n        setIsLoading(false);\n      }).catch(err => {\n        console.error('Error fetching user data:', err);\n        setIsReturningUser(false);\n        setIsLoading(false);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, [profile]);\n\n  // Predefined career requirements\n  useEffect(() => {\n    const careerRequirements = {\n      \"Data Analysis\": 3.75,\n      \"Software Engineer\": 3.5,\n      \"Web Development\": 3.5,\n      \"Other\": 3.0\n    };\n    setCareerRequirement(careerRequirements[career] || 3.0);\n  }, [career]);\n  const handleSubjectClick = subject => {\n    if (selectedSubject === subject) {\n      setShowPopup(false);\n      setSelectedSubject(null);\n    } else {\n      setSelectedSubject(subject);\n      setShowPopup(true);\n    }\n  };\n  const handleClosePopup = () => {\n    setShowPopup(false);\n    setSelectedSubject(null);\n  };\n  const handleStarClick = (nextValue, prevValue, subjectName) => {\n    setRatings({\n      ...ratings,\n      [subjectName]: nextValue\n    });\n  };\n\n  // Convert star ratings to grades\n  const starRatingToGrade = stars => {\n    if (stars === 10) return 4.0; // A\n    if (stars === 9) return 3.7;\n    if (stars === 8) return 3.0; // B\n    if (stars === 7) return 2.7;\n    if (stars === 6) return 2.0; // C\n    if (stars === 5) return 1.7;\n    if (stars === 4) return 1.0; // D\n    return 0; // F for anything less\n  };\n\n  // Calculate predicted grade for missing subjects\n  const calculatePredictedGrade = () => {\n    const requiredAverage = careerRequirement;\n    let enteredGrades = 0,\n      enteredTotal = 0;\n    curriculum.subjects.forEach(subject => {\n      const stars = ratings[subject.name];\n      const grade = starRatingToGrade(stars);\n      if (grade) {\n        enteredGrades += 1;\n        enteredTotal += grade;\n      }\n    });\n    const remainingSubjects = curriculum.subjects.length - enteredGrades;\n    if (remainingSubjects === 0) {\n      return 0; // All grades entered, no prediction needed\n    }\n    const predictedGrade = (requiredAverage * curriculum.subjects.length - enteredTotal) / remainingSubjects;\n    return predictedGrade;\n  };\n\n  // Check if achieving the required average is possible\n  const isPossibleToAchieveRequirement = () => {\n    const predictedGrade = calculatePredictedGrade();\n    return predictedGrade <= 4; // It's impossible if the predicted grade exceeds the maximum of 4\n  };\n\n  // Calculate the current average and what the user needs\n  const calculateCurrentAverage = () => {\n    let enteredTotal = 0,\n      enteredGrades = 0;\n    curriculum.subjects.forEach(subject => {\n      const stars = ratings[subject.name];\n      const grade = starRatingToGrade(stars);\n      if (grade) {\n        enteredGrades += 1;\n        enteredTotal += grade;\n      }\n    });\n    return enteredGrades ? (enteredTotal / enteredGrades).toFixed(2) : 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!profile || !profile.name || !profile.email || !year || !career) {\n      console.error(\"Missing profile, email, year or career information\");\n      return;\n    }\n    const userData = {\n      name: profile.name,\n      gmail: profile.email,\n      year,\n      career\n    };\n    axios.post('http://localhost:8000/api/user/', userData).then(res => {\n      setCurriculum(res.data.curriculum);\n      setIsReturningUser(true);\n    }).catch(err => {\n      console.error('Error:', err);\n    });\n  };\n\n  // Generate data for the Line Chart (combined graph)\n  const generateCombinedChartData = () => {\n    if (!curriculum || !careerRequirement) return null;\n    const labels = curriculum.subjects.map(subject => subject.name);\n    const userGradesData = labels.map(subjectName => starRatingToGrade(ratings[subjectName]) || 0); // User's grades\n    const predictedGrade = calculatePredictedGrade();\n    const predictedGradesData = labels.map(subjectName => starRatingToGrade(ratings[subjectName]) || Math.min(predictedGrade, 4)); // Predicted grade for missing subjects (capped at 4)\n\n    return {\n      labels,\n      datasets: [{\n        label: 'User Grades',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        data: userGradesData\n      }, {\n        label: `${career} Predicted Grade`,\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(153,102,255,0.4)',\n        borderColor: 'rgba(153,102,255,1)',\n        data: predictedGradesData\n      }]\n    };\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register and Get Curriculum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), profile && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name: \", profile.name, \" (\", profile.email, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), isReturningUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Year: \", year, \", Career Interest: \", career]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select Year:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: year,\n              onChange: e => setYear(Number(e.target.value)),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 1,\n                children: \"Year 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 2,\n                children: \"Year 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 3,\n                children: \"Year 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 4,\n                children: \"Year 4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select Career Interest:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: career,\n              onChange: e => setCareer(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a Career\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Data Analysis\",\n                children: \"Data Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Software Engineer\",\n                children: \"Software Engineer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Web Development\",\n                children: \"Web Development\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Other\",\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true), curriculum && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subject-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Curriculum for Year \", curriculum.year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subject-container\",\n            children: curriculum.subjects && curriculum.subjects.map((subject, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subject-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subject-box\",\n                onClick: () => handleSubjectClick(subject),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: subject.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this), showPopup && selectedSubject === subject && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"popup\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"popup-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Subject Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Subject: \", subject.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Description: \", subject.description]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"star-rating\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: \"Your Rating:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(StarRatingComponent, {\n                      name: subject.name,\n                      starCount: 10,\n                      value: ratings[subject.name] || 0,\n                      onStarClick: (nextValue, prevValue) => handleStarClick(nextValue, prevValue, subject.name)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleClosePopup,\n                    children: \"Close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"User Grades vs \", career, \" Predicted Grade\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), generateCombinedChartData() && /*#__PURE__*/_jsxDEV(Line, {\n            data: generateCombinedChartData(),\n            options: {\n              scales: {\n                y: {\n                  beginAtZero: true,\n                  max: 4\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grade-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Grade Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Average Grade: \", calculateCurrentAverage()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), isPossibleToAchieveRequirement() ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"To meet the requirement of \", careerRequirement, \" average, you need a grade of \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: Math.min(calculatePredictedGrade(), 4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 96\n            }, this), \" in remaining subjects.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red'\n            },\n            children: [\"It is impossible to meet the required average of \", careerRequirement, \" based on your current grades. Please consider retaking some subjects to improve your grades.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Course_2, \"g8lalTNkHkbscXW8XOEwRM0/ALA=\", false, function () {\n  return [useSelector];\n});\n_c = Course_2;\nexport default Course_2;\nvar _c;\n$RefreshReg$(_c, \"Course_2\");","map":{"version":3,"names":["React","useState","useEffect","axios","Nav","useSelector","StarRatingComponent","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","Course_2","_s","year","setYear","curriculum","setCurriculum","isReturningUser","setIsReturningUser","selectedSubject","setSelectedSubject","showPopup","setShowPopup","isLoading","setIsLoading","ratings","setRatings","career","setCareer","careerRequirement","setCareerRequirement","profile","state","email","get","encodeURIComponent","then","res","data","user","updatedRatings","subjects","forEach","subject","name","catch","err","console","error","careerRequirements","handleSubjectClick","handleClosePopup","handleStarClick","nextValue","prevValue","subjectName","starRatingToGrade","stars","calculatePredictedGrade","requiredAverage","enteredGrades","enteredTotal","grade","remainingSubjects","length","predictedGrade","isPossibleToAchieveRequirement","calculateCurrentAverage","toFixed","handleSubmit","e","preventDefault","userData","gmail","post","generateCombinedChartData","labels","map","userGradesData","predictedGradesData","Math","min","datasets","label","fill","lineTension","backgroundColor","borderColor","children","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","Number","target","onClick","index","style","cursor","description","starCount","onStarClick","options","scales","y","beginAtZero","max","color","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/Web_pro_2024/web_pro/src/components/Course/Course_2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Nav from '../Nav';\r\nimport { useSelector } from 'react-redux';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\nimport { Line } from 'react-chartjs-2'; // We will use Line chart for both datasets\r\nimport 'chart.js/auto'; // Import Chart.js\r\nimport \"./Course_2.css\";\r\n\r\nfunction Course_2() {\r\n  const [year, setYear] = useState(1);\r\n  const [curriculum, setCurriculum] = useState(null);\r\n  const [isReturningUser, setIsReturningUser] = useState(false);\r\n  const [selectedSubject, setSelectedSubject] = useState(null);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [ratings, setRatings] = useState({});\r\n  const [career, setCareer] = useState(''); // Hold the career from backend\r\n  const [careerRequirement, setCareerRequirement] = useState(3.5); // Default requirement for Software Engineer\r\n\r\n  const profile = useSelector(state => state.profile);\r\n\r\n  useEffect(() => {\r\n    if (profile && profile.email) {\r\n      axios.get(`http://localhost:8000/api/user/${encodeURIComponent(profile.email)}`)\r\n        .then(res => {\r\n          setCurriculum(res.data.curriculum);\r\n          setYear(res.data.user.year);\r\n          setCareer(res.data.user.career || \"No career selected\");\r\n          setIsReturningUser(true);\r\n\r\n          if (res.data.user && res.data.user.ratings) {\r\n            const updatedRatings = {};\r\n            res.data.curriculum.subjects.forEach((subject) => {\r\n              updatedRatings[subject.name] = res.data.user.ratings[subject.name] || 0;\r\n            });\r\n            setRatings(updatedRatings);\r\n          }\r\n          setIsLoading(false);\r\n        })\r\n        .catch(err => {\r\n          console.error('Error fetching user data:', err);\r\n          setIsReturningUser(false);\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, [profile]);\r\n\r\n  // Predefined career requirements\r\n  useEffect(() => {\r\n    const careerRequirements = {\r\n      \"Data Analysis\": 3.75,\r\n      \"Software Engineer\": 3.5,\r\n      \"Web Development\": 3.5,\r\n      \"Other\": 3.0\r\n    };\r\n\r\n    setCareerRequirement(careerRequirements[career] || 3.0);\r\n  }, [career]);\r\n\r\n  const handleSubjectClick = (subject) => {\r\n    if (selectedSubject === subject) {\r\n      setShowPopup(false);\r\n      setSelectedSubject(null);\r\n    } else {\r\n      setSelectedSubject(subject);\r\n      setShowPopup(true);\r\n    }\r\n  };\r\n\r\n  const handleClosePopup = () => {\r\n    setShowPopup(false);\r\n    setSelectedSubject(null);\r\n  };\r\n\r\n  const handleStarClick = (nextValue, prevValue, subjectName) => {\r\n    setRatings({ ...ratings, [subjectName]: nextValue });\r\n  };\r\n\r\n  // Convert star ratings to grades\r\n  const starRatingToGrade = (stars) => {\r\n    if (stars === 10) return 4.0; // A\r\n    if (stars === 9) return 3.7;\r\n    if (stars === 8) return 3.0; // B\r\n    if (stars === 7) return 2.7;\r\n    if (stars === 6) return 2.0; // C\r\n    if (stars === 5) return 1.7;\r\n    if (stars === 4) return 1.0; // D\r\n    return 0; // F for anything less\r\n  };\r\n\r\n  // Calculate predicted grade for missing subjects\r\n  const calculatePredictedGrade = () => {\r\n    const requiredAverage = careerRequirement;\r\n    let enteredGrades = 0, enteredTotal = 0;\r\n\r\n    curriculum.subjects.forEach((subject) => {\r\n      const stars = ratings[subject.name];\r\n      const grade = starRatingToGrade(stars);\r\n      if (grade) {\r\n        enteredGrades += 1;\r\n        enteredTotal += grade;\r\n      }\r\n    });\r\n\r\n    const remainingSubjects = curriculum.subjects.length - enteredGrades;\r\n    if (remainingSubjects === 0) {\r\n      return 0; // All grades entered, no prediction needed\r\n    }\r\n\r\n    const predictedGrade = (requiredAverage * curriculum.subjects.length - enteredTotal) / remainingSubjects;\r\n    return predictedGrade;\r\n  };\r\n\r\n  // Check if achieving the required average is possible\r\n  const isPossibleToAchieveRequirement = () => {\r\n    const predictedGrade = calculatePredictedGrade();\r\n    return predictedGrade <= 4; // It's impossible if the predicted grade exceeds the maximum of 4\r\n  };\r\n\r\n  // Calculate the current average and what the user needs\r\n  const calculateCurrentAverage = () => {\r\n    let enteredTotal = 0, enteredGrades = 0;\r\n\r\n    curriculum.subjects.forEach((subject) => {\r\n      const stars = ratings[subject.name];\r\n      const grade = starRatingToGrade(stars);\r\n      if (grade) {\r\n        enteredGrades += 1;\r\n        enteredTotal += grade;\r\n      }\r\n    });\r\n\r\n    return enteredGrades ? (enteredTotal / enteredGrades).toFixed(2) : 0;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!profile || !profile.name || !profile.email || !year || !career) {\r\n      console.error(\"Missing profile, email, year or career information\");\r\n      return;\r\n    }\r\n\r\n    const userData = {\r\n      name: profile.name,\r\n      gmail: profile.email,\r\n      year,\r\n      career,\r\n    };\r\n\r\n    axios.post('http://localhost:8000/api/user/', userData)\r\n      .then(res => {\r\n        setCurriculum(res.data.curriculum);\r\n        setIsReturningUser(true);\r\n      })\r\n      .catch(err => {\r\n        console.error('Error:', err);\r\n      });\r\n  };\r\n\r\n  // Generate data for the Line Chart (combined graph)\r\n  const generateCombinedChartData = () => {\r\n    if (!curriculum || !careerRequirement) return null;\r\n\r\n    const labels = curriculum.subjects.map(subject => subject.name);\r\n    const userGradesData = labels.map(subjectName => starRatingToGrade(ratings[subjectName]) || 0); // User's grades\r\n    const predictedGrade = calculatePredictedGrade();\r\n    const predictedGradesData = labels.map(subjectName => starRatingToGrade(ratings[subjectName]) || Math.min(predictedGrade, 4)); // Predicted grade for missing subjects (capped at 4)\r\n\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'User Grades',\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: 'rgba(75,192,192,0.4)',\r\n          borderColor: 'rgba(75,192,192,1)',\r\n          data: userGradesData\r\n        },\r\n        {\r\n          label: `${career} Predicted Grade`,\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: 'rgba(153,102,255,0.4)',\r\n          borderColor: 'rgba(153,102,255,1)',\r\n          data: predictedGradesData\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div className=\"App\">\r\n        <h1>Register and Get Curriculum</h1>\r\n\r\n        {profile && (\r\n          <>\r\n            <label>\r\n              Name: {profile.name} ({profile.email})\r\n            </label>\r\n\r\n            {isReturningUser ? (\r\n              <>\r\n                <p>Year: {year}, Career Interest: {career}</p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <label>\r\n                  Select Year:\r\n                  <select value={year} onChange={(e) => setYear(Number(e.target.value))}>\r\n                    <option value={1}>Year 1</option>\r\n                    <option value={2}>Year 2</option>\r\n                    <option value={3}>Year 3</option>\r\n                    <option value={4}>Year 4</option>\r\n                  </select>\r\n                </label>\r\n\r\n                <label>\r\n                  Select Career Interest:\r\n                  <select value={career} onChange={(e) => setCareer(e.target.value)}>\r\n                    <option value=\"\">Select a Career</option>\r\n                    <option value=\"Data Analysis\">Data Analysis</option>\r\n                    <option value=\"Software Engineer\">Software Engineer</option>\r\n                    <option value=\"Web Development\">Web Development</option>\r\n                    <option value=\"Other\">Other</option>\r\n                  </select>\r\n                </label>\r\n\r\n                <button onClick={handleSubmit}>\r\n                  Submit\r\n                </button>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {curriculum && (\r\n          <div className=\"content-container\">\r\n            <div className=\"subject-list\">\r\n              <h2>Curriculum for Year {curriculum.year}</h2>\r\n              <div className=\"subject-container\">\r\n                {curriculum.subjects && curriculum.subjects.map((subject, index) => (\r\n                  <div key={index} className=\"subject-wrapper\">\r\n                    <div\r\n                      className=\"subject-box\"\r\n                      onClick={() => handleSubjectClick(subject)}\r\n                      style={{ cursor: 'pointer' }}\r\n                    >\r\n                      <h3>{subject.name}</h3>\r\n                    </div>\r\n\r\n                    {/* Popup for subject details and star rating input */}\r\n                    {showPopup && selectedSubject === subject && (\r\n                      <div className=\"popup\">\r\n                        <div className=\"popup-content\">\r\n                          <h3>Subject Details</h3>\r\n                          <p>Subject: {subject.name}</p>\r\n                          <p>Description: {subject.description}</p>\r\n\r\n                          {/* Star rating input inside the popup */}\r\n                          <div className=\"star-rating\">\r\n                            <h3>Your Rating:</h3>\r\n                            <StarRatingComponent\r\n                              name={subject.name}\r\n                              starCount={10}\r\n                              value={ratings[subject.name] || 0}\r\n                              onStarClick={(nextValue, prevValue) => handleStarClick(nextValue, prevValue, subject.name)}\r\n                            />\r\n                          </div>\r\n\r\n                          <button onClick={handleClosePopup}>Close</button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"chart-container\">\r\n              <h2>User Grades vs {career} Predicted Grade</h2>\r\n              {generateCombinedChartData() && (\r\n                <Line\r\n                  data={generateCombinedChartData()}\r\n                  options={{\r\n                    scales: {\r\n                      y: {\r\n                        beginAtZero: true,\r\n                        max: 4\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            {/* Display current average and predicted grade required */}\r\n            <div className=\"grade-info\">\r\n              <h2>Grade Information</h2>\r\n              <p>Current Average Grade: {calculateCurrentAverage()}</p>\r\n              {isPossibleToAchieveRequirement() ? (\r\n                <p>To meet the requirement of {careerRequirement} average, you need a grade of <strong>{Math.min(calculatePredictedGrade(), 4)}</strong> in remaining subjects.</p>\r\n              ) : (\r\n                <p style={{ color: 'red' }}>It is impossible to meet the required average of {careerRequirement} based on your current grades. Please consider retaking some subjects to improve your grades.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Course_2;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}