{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\Web_pro_2024\\\\web_pro\\\\src\\\\components\\\\Course\\\\Course_2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Nav from '../Nav';\nimport { useSelector } from 'react-redux';\nimport { Line } from 'react-chartjs-2'; // We will use Line chart for both datasets\nimport 'chart.js/auto'; // Import Chart.js\nimport \"./Course_2.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Course_2() {\n  _s();\n  const [year, setYear] = useState(1);\n  const [curriculum, setCurriculum] = useState(null);\n  const [isReturningUser, setIsReturningUser] = useState(false);\n  const [selectedSubject, setSelectedSubject] = useState(null);\n  const [showPopup, setShowPopup] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [grades, setGrades] = useState({});\n  const [career, setCareer] = useState(''); // Hold the career from backend\n  const [careerRequirement, setCareerRequirement] = useState(3.5); // Default requirement for Software Engineer\n\n  const profile = useSelector(state => state.profile);\n  useEffect(() => {\n    if (profile && profile.email) {\n      axios.get(`http://localhost:8000/api/user/${encodeURIComponent(profile.email)}`).then(res => {\n        setCurriculum(res.data.curriculum);\n        setYear(res.data.user.year);\n        setCareer(res.data.user.career || \"No career selected\");\n        setIsReturningUser(true);\n        if (res.data.user && res.data.user.grades) {\n          const updatedGrades = {};\n          res.data.curriculum.subjects.forEach(subject => {\n            updatedGrades[subject.name] = res.data.user.grades[subject.name] || '';\n          });\n          setGrades(updatedGrades);\n        }\n        setIsLoading(false);\n      }).catch(err => {\n        console.error('Error fetching user data:', err);\n        setIsReturningUser(false);\n        setIsLoading(false);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, [profile]);\n\n  // Predefined career requirements\n  useEffect(() => {\n    const careerRequirements = {\n      \"Data Analysis\": 3.75,\n      \"Software Engineer\": 3.5,\n      \"Web Development\": 3.5,\n      \"Other\": 3.0\n    };\n    setCareerRequirement(careerRequirements[career] || 3.0);\n  }, [career]);\n  const handleSubjectClick = subject => {\n    if (selectedSubject === subject) {\n      setShowPopup(false);\n      setSelectedSubject(null);\n    } else {\n      setSelectedSubject(subject);\n      setShowPopup(true);\n    }\n  };\n  const handleClosePopup = () => {\n    setShowPopup(false);\n    setSelectedSubject(null);\n  };\n  const handleGradeChange = (subjectName, value) => {\n    setGrades({\n      ...grades,\n      [subjectName]: value\n    });\n  };\n\n  // Calculate predicted grade for missing subjects\n  const calculatePredictedGrade = () => {\n    const requiredAverage = careerRequirement;\n    let enteredGrades = 0,\n      enteredTotal = 0;\n    curriculum.subjects.forEach(subject => {\n      const grade = parseFloat(grades[subject.name]);\n      if (grade) {\n        enteredGrades += 1;\n        enteredTotal += grade;\n      }\n    });\n    const remainingSubjects = curriculum.subjects.length - enteredGrades;\n    if (remainingSubjects === 0) {\n      return 0; // All grades entered, no prediction needed\n    }\n    const predictedGrade = (requiredAverage * curriculum.subjects.length - enteredTotal) / remainingSubjects;\n    return Math.min(Math.max(predictedGrade, 0), 4); // Ensure predicted grade is between 0 and 4\n  };\n\n  // Calculate the current average and what the user needs\n  const calculateCurrentAverage = () => {\n    let enteredTotal = 0,\n      enteredGrades = 0;\n    curriculum.subjects.forEach(subject => {\n      const grade = parseFloat(grades[subject.name]);\n      if (grade) {\n        enteredGrades += 1;\n        enteredTotal += grade;\n      }\n    });\n    return enteredGrades ? (enteredTotal / enteredGrades).toFixed(2) : 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!profile || !profile.name || !profile.email || !year || !career) {\n      console.error(\"Missing profile, email, year or career information\");\n      return;\n    }\n    const userData = {\n      name: profile.name,\n      gmail: profile.email,\n      year,\n      career\n    };\n    axios.post('http://localhost:8000/api/user/', userData).then(res => {\n      setCurriculum(res.data.curriculum);\n      setIsReturningUser(true);\n    }).catch(err => {\n      console.error('Error:', err);\n    });\n  };\n\n  // Generate data for the Line Chart (combined graph)\n  const generateCombinedChartData = () => {\n    if (!curriculum || !careerRequirement) return null;\n    const labels = curriculum.subjects.map(subject => subject.name);\n    const userGradesData = labels.map(subjectName => parseFloat(grades[subjectName]) || 0); // User's grades\n    const predictedGrade = calculatePredictedGrade();\n    const predictedGradesData = labels.map(subjectName => parseFloat(grades[subjectName]) || predictedGrade); // Predicted grade for missing subjects\n\n    return {\n      labels,\n      datasets: [{\n        label: 'User Grades',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        data: userGradesData\n      }, {\n        label: `${career} Predicted Grade`,\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(153,102,255,0.4)',\n        borderColor: 'rgba(153,102,255,1)',\n        data: predictedGradesData\n      }]\n    };\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register and Get Curriculum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), profile && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name: \", profile.name, \" (\", profile.email, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), isReturningUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Year: \", year, \", Career Interest: \", career]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select Year:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: year,\n              onChange: e => setYear(Number(e.target.value)),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 1,\n                children: \"Year 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 2,\n                children: \"Year 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 3,\n                children: \"Year 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 4,\n                children: \"Year 4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select Career Interest:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: career,\n              onChange: e => setCareer(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a Career\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Data Analysis\",\n                children: \"Data Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Software Engineer\",\n                children: \"Software Engineer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Web Development\",\n                children: \"Web Development\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Other\",\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true), curriculum && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subject-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Curriculum for Year \", curriculum.year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subject-container\",\n            children: curriculum.subjects && curriculum.subjects.map((subject, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subject-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subject-box\",\n                onClick: () => handleSubjectClick(subject),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: subject.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this), showPopup && selectedSubject === subject && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"popup\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"popup-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Subject Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Subject: \", subject.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Description: \", subject.description]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"grade-input\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: \"Your Grade:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      min: \"0\",\n                      max: \"4\",\n                      step: \"0.01\",\n                      value: grades[subject.name] || '',\n                      onChange: e => handleGradeChange(subject.name, e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleClosePopup,\n                    children: \"Close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"User Grades vs \", career, \" Predicted Grade\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), generateCombinedChartData() && /*#__PURE__*/_jsxDEV(Line, {\n            data: generateCombinedChartData(),\n            options: {\n              scales: {\n                y: {\n                  beginAtZero: true,\n                  max: 4\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grade-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Grade Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Average Grade: \", calculateCurrentAverage()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"To meet the requirement of \", careerRequirement, \" average, you need a grade of \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: calculatePredictedGrade()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 94\n            }, this), \" in remaining subjects.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Course_2, \"A7j0wKHFF9Pe6x02Nk1oeEG0Jng=\", false, function () {\n  return [useSelector];\n});\n_c = Course_2;\nexport default Course_2;\nvar _c;\n$RefreshReg$(_c, \"Course_2\");","map":{"version":3,"names":["React","useState","useEffect","axios","Nav","useSelector","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","Course_2","_s","year","setYear","curriculum","setCurriculum","isReturningUser","setIsReturningUser","selectedSubject","setSelectedSubject","showPopup","setShowPopup","isLoading","setIsLoading","grades","setGrades","career","setCareer","careerRequirement","setCareerRequirement","profile","state","email","get","encodeURIComponent","then","res","data","user","updatedGrades","subjects","forEach","subject","name","catch","err","console","error","careerRequirements","handleSubjectClick","handleClosePopup","handleGradeChange","subjectName","value","calculatePredictedGrade","requiredAverage","enteredGrades","enteredTotal","grade","parseFloat","remainingSubjects","length","predictedGrade","Math","min","max","calculateCurrentAverage","toFixed","handleSubmit","e","preventDefault","userData","gmail","post","generateCombinedChartData","labels","map","userGradesData","predictedGradesData","datasets","label","fill","lineTension","backgroundColor","borderColor","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","Number","target","onClick","index","style","cursor","description","type","step","options","scales","y","beginAtZero","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/Web_pro_2024/web_pro/src/components/Course/Course_2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Nav from '../Nav';\r\nimport { useSelector } from 'react-redux';\r\nimport { Line } from 'react-chartjs-2'; // We will use Line chart for both datasets\r\nimport 'chart.js/auto'; // Import Chart.js\r\nimport \"./Course_2.css\";\r\n\r\nfunction Course_2() {\r\n  const [year, setYear] = useState(1);\r\n  const [curriculum, setCurriculum] = useState(null);\r\n  const [isReturningUser, setIsReturningUser] = useState(false);\r\n  const [selectedSubject, setSelectedSubject] = useState(null);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [grades, setGrades] = useState({});\r\n  const [career, setCareer] = useState(''); // Hold the career from backend\r\n  const [careerRequirement, setCareerRequirement] = useState(3.5); // Default requirement for Software Engineer\r\n\r\n  const profile = useSelector(state => state.profile);\r\n\r\n  useEffect(() => {\r\n    if (profile && profile.email) {\r\n      axios.get(`http://localhost:8000/api/user/${encodeURIComponent(profile.email)}`)\r\n        .then(res => {\r\n          setCurriculum(res.data.curriculum);\r\n          setYear(res.data.user.year);\r\n          setCareer(res.data.user.career || \"No career selected\");\r\n          setIsReturningUser(true);\r\n\r\n          if (res.data.user && res.data.user.grades) {\r\n            const updatedGrades = {};\r\n            res.data.curriculum.subjects.forEach((subject) => {\r\n              updatedGrades[subject.name] = res.data.user.grades[subject.name] || '';\r\n            });\r\n            setGrades(updatedGrades);\r\n          }\r\n          setIsLoading(false);\r\n        })\r\n        .catch(err => {\r\n          console.error('Error fetching user data:', err);\r\n          setIsReturningUser(false);\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, [profile]);\r\n\r\n  // Predefined career requirements\r\n  useEffect(() => {\r\n    const careerRequirements = {\r\n      \"Data Analysis\": 3.75,\r\n      \"Software Engineer\": 3.5,\r\n      \"Web Development\": 3.5,\r\n      \"Other\": 3.0\r\n    };\r\n\r\n    setCareerRequirement(careerRequirements[career] || 3.0);\r\n  }, [career]);\r\n\r\n  const handleSubjectClick = (subject) => {\r\n    if (selectedSubject === subject) {\r\n      setShowPopup(false);\r\n      setSelectedSubject(null);\r\n    } else {\r\n      setSelectedSubject(subject);\r\n      setShowPopup(true);\r\n    }\r\n  };\r\n\r\n  const handleClosePopup = () => {\r\n    setShowPopup(false);\r\n    setSelectedSubject(null);\r\n  };\r\n\r\n  const handleGradeChange = (subjectName, value) => {\r\n    setGrades({ ...grades, [subjectName]: value });\r\n  };\r\n\r\n  // Calculate predicted grade for missing subjects\r\n  const calculatePredictedGrade = () => {\r\n    const requiredAverage = careerRequirement;\r\n    let enteredGrades = 0, enteredTotal = 0;\r\n\r\n    curriculum.subjects.forEach((subject) => {\r\n      const grade = parseFloat(grades[subject.name]);\r\n      if (grade) {\r\n        enteredGrades += 1;\r\n        enteredTotal += grade;\r\n      }\r\n    });\r\n\r\n    const remainingSubjects = curriculum.subjects.length - enteredGrades;\r\n    if (remainingSubjects === 0) {\r\n      return 0; // All grades entered, no prediction needed\r\n    }\r\n\r\n    const predictedGrade = (requiredAverage * curriculum.subjects.length - enteredTotal) / remainingSubjects;\r\n    return Math.min(Math.max(predictedGrade, 0), 4); // Ensure predicted grade is between 0 and 4\r\n  };\r\n\r\n  // Calculate the current average and what the user needs\r\n  const calculateCurrentAverage = () => {\r\n    let enteredTotal = 0, enteredGrades = 0;\r\n\r\n    curriculum.subjects.forEach((subject) => {\r\n      const grade = parseFloat(grades[subject.name]);\r\n      if (grade) {\r\n        enteredGrades += 1;\r\n        enteredTotal += grade;\r\n      }\r\n    });\r\n\r\n    return enteredGrades ? (enteredTotal / enteredGrades).toFixed(2) : 0;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!profile || !profile.name || !profile.email || !year || !career) {\r\n      console.error(\"Missing profile, email, year or career information\");\r\n      return;\r\n    }\r\n\r\n    const userData = {\r\n      name: profile.name,\r\n      gmail: profile.email,\r\n      year,\r\n      career,\r\n    };\r\n\r\n    axios.post('http://localhost:8000/api/user/', userData)\r\n      .then(res => {\r\n        setCurriculum(res.data.curriculum);\r\n        setIsReturningUser(true);\r\n      })\r\n      .catch(err => {\r\n        console.error('Error:', err);\r\n      });\r\n  };\r\n\r\n  // Generate data for the Line Chart (combined graph)\r\n  const generateCombinedChartData = () => {\r\n    if (!curriculum || !careerRequirement) return null;\r\n\r\n    const labels = curriculum.subjects.map(subject => subject.name);\r\n    const userGradesData = labels.map(subjectName => parseFloat(grades[subjectName]) || 0); // User's grades\r\n    const predictedGrade = calculatePredictedGrade();\r\n    const predictedGradesData = labels.map(subjectName => parseFloat(grades[subjectName]) || predictedGrade); // Predicted grade for missing subjects\r\n\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'User Grades',\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: 'rgba(75,192,192,0.4)',\r\n          borderColor: 'rgba(75,192,192,1)',\r\n          data: userGradesData\r\n        },\r\n        {\r\n          label: `${career} Predicted Grade`,\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: 'rgba(153,102,255,0.4)',\r\n          borderColor: 'rgba(153,102,255,1)',\r\n          data: predictedGradesData\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div className=\"App\">\r\n        <h1>Register and Get Curriculum</h1>\r\n\r\n        {profile && (\r\n          <>\r\n            <label>\r\n              Name: {profile.name} ({profile.email})\r\n            </label>\r\n\r\n            {isReturningUser ? (\r\n              <>\r\n                <p>Year: {year}, Career Interest: {career}</p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <label>\r\n                  Select Year:\r\n                  <select value={year} onChange={(e) => setYear(Number(e.target.value))}>\r\n                    <option value={1}>Year 1</option>\r\n                    <option value={2}>Year 2</option>\r\n                    <option value={3}>Year 3</option>\r\n                    <option value={4}>Year 4</option>\r\n                  </select>\r\n                </label>\r\n\r\n                <label>\r\n                  Select Career Interest:\r\n                  <select value={career} onChange={(e) => setCareer(e.target.value)}>\r\n                    <option value=\"\">Select a Career</option>\r\n                    <option value=\"Data Analysis\">Data Analysis</option>\r\n                    <option value=\"Software Engineer\">Software Engineer</option>\r\n                    <option value=\"Web Development\">Web Development</option>\r\n                    <option value=\"Other\">Other</option>\r\n                  </select>\r\n                </label>\r\n\r\n                <button onClick={handleSubmit}>\r\n                  Submit\r\n                </button>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {curriculum && (\r\n          <div className=\"content-container\">\r\n            <div className=\"subject-list\">\r\n              <h2>Curriculum for Year {curriculum.year}</h2>\r\n              <div className=\"subject-container\">\r\n                {curriculum.subjects && curriculum.subjects.map((subject, index) => (\r\n                  <div key={index} className=\"subject-wrapper\">\r\n                    <div\r\n                      className=\"subject-box\"\r\n                      onClick={() => handleSubjectClick(subject)}\r\n                      style={{ cursor: 'pointer' }}\r\n                    >\r\n                      <h3>{subject.name}</h3>\r\n                    </div>\r\n\r\n                    {/* Popup for subject details and grade input */}\r\n                    {showPopup && selectedSubject === subject && (\r\n                      <div className=\"popup\">\r\n                        <div className=\"popup-content\">\r\n                          <h3>Subject Details</h3>\r\n                          <p>Subject: {subject.name}</p>\r\n                          <p>Description: {subject.description}</p>\r\n\r\n                          {/* Grade input inside the popup */}\r\n                          <div className=\"grade-input\">\r\n                            <h3>Your Grade:</h3>\r\n                            <input\r\n                              type=\"number\"\r\n                              min=\"0\"\r\n                              max=\"4\"\r\n                              step=\"0.01\"\r\n                              value={grades[subject.name] || ''}\r\n                              onChange={(e) => handleGradeChange(subject.name, e.target.value)}\r\n                            />\r\n                          </div>\r\n\r\n                          <button onClick={handleClosePopup}>Close</button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"chart-container\">\r\n              <h2>User Grades vs {career} Predicted Grade</h2>\r\n              {generateCombinedChartData() && (\r\n                <Line\r\n                  data={generateCombinedChartData()}\r\n                  options={{\r\n                    scales: {\r\n                      y: {\r\n                        beginAtZero: true,\r\n                        max: 4\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            {/* Display current average and predicted grade required */}\r\n            <div className=\"grade-info\">\r\n              <h2>Grade Information</h2>\r\n              <p>Current Average Grade: {calculateCurrentAverage()}</p>\r\n              <p>To meet the requirement of {careerRequirement} average, you need a grade of <strong>{calculatePredictedGrade()}</strong> in remaining subjects.</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Course_2;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}