{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\Web_pro_2024\\\\web_pro\\\\src\\\\components\\\\Course\\\\Course_2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Nav from '../Nav';\nimport { useSelector } from 'react-redux';\nimport StarRatingComponent from 'react-star-rating-component';\nimport { Line } from 'react-chartjs-2'; // We will use Line chart for both datasets\nimport 'chart.js/auto'; // Import Chart.js\nimport \"./Course_2.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Course_2() {\n  _s();\n  const [year, setYear] = useState(1);\n  const [curriculum, setCurriculum] = useState(null);\n  const [isReturningUser, setIsReturningUser] = useState(false);\n  const [selectedSubject, setSelectedSubject] = useState(null);\n  const [showPopup, setShowPopup] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [ratings, setRatings] = useState({});\n  const [career, setCareer] = useState(''); // Hold the career from backend\n  const [careerImportance, setCareerImportance] = useState({});\n  const profile = useSelector(state => state.profile);\n  useEffect(() => {\n    if (profile && profile.email) {\n      axios.get(`http://localhost:8000/api/user/${encodeURIComponent(profile.email)}`).then(res => {\n        setCurriculum(res.data.curriculum);\n        setYear(res.data.user.year);\n        setCareer(res.data.user.career || \"No career selected\"); // Set career from backend\n        setIsReturningUser(true);\n        if (res.data.user && res.data.user.ratings) {\n          const updatedRatings = {};\n          res.data.curriculum.subjects.forEach(subject => {\n            updatedRatings[subject.name] = res.data.user.ratings[subject.name] || 0;\n          });\n          setRatings(updatedRatings);\n        }\n        setIsLoading(false);\n      }).catch(err => {\n        console.error('Error fetching user data:', err);\n        setIsReturningUser(false);\n        setIsLoading(false);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, [profile]);\n\n  // Predefined importance levels based on career\n  useEffect(() => {\n    const careerImportanceLevels = {\n      \"Data Analysis\": {\n        \"Math 101\": 4,\n        \"Physics 101\": 3,\n        \"Programming 101\": 5\n        // Add other subjects and their importance\n      },\n      \"Software Engineer\": {\n        \"Math 101\": 3,\n        \"Physics 101\": 2,\n        \"Programming 101\": 5\n      },\n      \"Web Development\": {\n        \"Math 101\": 2,\n        \"Physics 101\": 1,\n        \"Programming 101\": 5\n      },\n      \"Other\": {\n        \"Math 101\": 3,\n        \"Physics 101\": 3,\n        \"Programming 101\": 3\n      }\n    };\n    setCareerImportance(careerImportanceLevels[career] || {});\n  }, [career]);\n  const handleSubjectClick = subject => {\n    if (selectedSubject === subject) {\n      setShowPopup(false);\n      setSelectedSubject(null);\n    } else {\n      setSelectedSubject(subject);\n      setShowPopup(true);\n    }\n  };\n  const handleClosePopup = () => {\n    setShowPopup(false);\n    setSelectedSubject(null);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!profile || !profile.name || !profile.email || !year || !career) {\n      console.error(\"Missing profile, email, year or career information\");\n      return;\n    }\n    const userData = {\n      name: profile.name,\n      gmail: profile.email,\n      year,\n      career\n    };\n    axios.post('http://localhost:8000/api/user/', userData).then(res => {\n      setCurriculum(res.data.curriculum);\n      setIsReturningUser(true);\n    }).catch(err => {\n      console.error('Error:', err);\n    });\n  };\n  const onStarClick = (nextValue, prevValue, index) => {\n    const subjectName = curriculum.subjects[index].name;\n    setRatings({\n      ...ratings,\n      [subjectName]: nextValue\n    });\n    axios.post('http://localhost:8000/api/user/rating', {\n      gmail: profile.email,\n      subject: subjectName,\n      rating: nextValue\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).catch(err => {\n      console.error('Error:', err);\n    });\n  };\n  const getGrade = rating => {\n    if (rating === 10) return 4.0; // A\n    if (rating === 9) return 3.7; // A-\n    if (rating === 8) return 3.3; // B+\n    if (rating === 7) return 3.0; // B\n    if (rating === 6) return 2.7; // B-\n    if (rating === 5) return 2.3; // C+\n    if (rating === 4) return 2.0; // C\n    if (rating === 3) return 1.7; // C-\n    if (rating === 2) return 1.0; // D\n    if (rating === 1) return 0.7; // D-\n    return 0.0; // F\n  };\n\n  // Function to calculate the predicted grades\n  // Function to calculate the average grade and predict grades for ungraded subjects\n  const calculateGrades = () => {\n    let totalGradePoints = 0;\n    let gradedSubjects = 0;\n    let totalSubjects = curriculum.subjects.length;\n    curriculum.subjects.forEach(subject => {\n      if (ratings[subject.name] !== undefined) {\n        // Add grade points for rated subjects\n        totalGradePoints += getGrade(ratings[subject.name]);\n        gradedSubjects++;\n      } else {\n        // Predict the minimum passing grade for ungraded subjects (C = 2.0)\n        totalGradePoints += 2.0; // Predicted grade for ungraded subjects\n      }\n    });\n    let averageGrade = (totalGradePoints / totalSubjects).toFixed(2);\n    return {\n      averageGrade,\n      gradedSubjects,\n      totalSubjects\n    };\n  };\n\n  // Generate data for the Line Chart (combined graph)\n  const generateCombinedChartData = () => {\n    if (!curriculum || !careerImportance) return null;\n    const labels = curriculum.subjects.map(subject => subject.name);\n    const userRatingsData = labels.map(subjectName => ratings[subjectName] || 0); // User's ratings\n    const careerImportanceData = labels.map(subjectName => careerImportance[subjectName] || 0); // Career importance\n\n    return {\n      labels,\n      datasets: [{\n        label: 'User Ratings',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        data: userRatingsData\n      }, {\n        label: `${career} Career Importance`,\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(153,102,255,0.4)',\n        borderColor: 'rgba(153,102,255,1)',\n        data: careerImportanceData\n      }]\n    };\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register and Get Curriculum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), profile && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name: \", profile.name, \" (\", profile.email, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), isReturningUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Year: \", year, \", Career Interest: \", career]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select Year:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: year,\n              onChange: e => setYear(Number(e.target.value)),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 1,\n                children: \"Year 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 2,\n                children: \"Year 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 3,\n                children: \"Year 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 4,\n                children: \"Year 4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select Career Interest:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: career,\n              onChange: e => setCareer(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a Career\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Data Analysis\",\n                children: \"Data Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Software Engineer\",\n                children: \"Software Engineer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Web Development\",\n                children: \"Web Development\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Other\",\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true), curriculum && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subject-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Curriculum for Year \", curriculum.year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subject-container\",\n            children: curriculum.subjects && curriculum.subjects.map((subject, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subject-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subject-box\",\n                onClick: () => handleSubjectClick(subject),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: subject.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Grade: \", getGrade(ratings[subject.name] || 6)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 15\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 13\n              }, this), showPopup && selectedSubject === subject && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"popup\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"popup-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Subject Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Subject: \", subject.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Description: \", subject.description]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"star-rating\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: \"Your Rating:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(StarRatingComponent, {\n                      name: subject.name,\n                      starCount: 10,\n                      value: ratings[subject.name] || 0,\n                      onStarClick: (nextValue, prevValue) => onStarClick(nextValue, prevValue, index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleClosePopup,\n                    children: \"Close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 15\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grade-summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Grade Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 3\n            }, this), (() => {\n              const {\n                averageGrade,\n                gradedSubjects,\n                totalSubjects\n              } = calculateGrades();\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Average Grade (4.0 scale): \", averageGrade]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Subjects Graded: \", gradedSubjects, \"/\", totalSubjects]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true);\n            })()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"User Ratings vs \", career, \" Importance\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 7\n          }, this), generateCombinedChartData() && /*#__PURE__*/_jsxDEV(Line, {\n            data: generateCombinedChartData(),\n            options: {\n              scales: {\n                y: {\n                  beginAtZero: true,\n                  max: 10\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Course_2, \"to2U1Ko8/NCIYDN4VQTLjohITuU=\", false, function () {\n  return [useSelector];\n});\n_c = Course_2;\nexport default Course_2;\nvar _c;\n$RefreshReg$(_c, \"Course_2\");","map":{"version":3,"names":["React","useState","useEffect","axios","Nav","useSelector","StarRatingComponent","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","Course_2","_s","year","setYear","curriculum","setCurriculum","isReturningUser","setIsReturningUser","selectedSubject","setSelectedSubject","showPopup","setShowPopup","isLoading","setIsLoading","ratings","setRatings","career","setCareer","careerImportance","setCareerImportance","profile","state","email","get","encodeURIComponent","then","res","data","user","updatedRatings","subjects","forEach","subject","name","catch","err","console","error","careerImportanceLevels","handleSubjectClick","handleClosePopup","handleSubmit","e","preventDefault","userData","gmail","post","onStarClick","nextValue","prevValue","index","subjectName","rating","headers","getGrade","calculateGrades","totalGradePoints","gradedSubjects","totalSubjects","length","undefined","averageGrade","toFixed","generateCombinedChartData","labels","map","userRatingsData","careerImportanceData","datasets","label","fill","lineTension","backgroundColor","borderColor","children","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","Number","target","onClick","style","cursor","description","starCount","options","scales","y","beginAtZero","max","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/Web_pro_2024/web_pro/src/components/Course/Course_2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Nav from '../Nav';\r\nimport { useSelector } from 'react-redux';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\nimport { Line } from 'react-chartjs-2';  // We will use Line chart for both datasets\r\nimport 'chart.js/auto'; // Import Chart.js\r\nimport \"./Course_2.css\";\r\n\r\nfunction Course_2() {\r\n  const [year, setYear] = useState(1);\r\n  const [curriculum, setCurriculum] = useState(null);\r\n  const [isReturningUser, setIsReturningUser] = useState(false);\r\n  const [selectedSubject, setSelectedSubject] = useState(null);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [ratings, setRatings] = useState({});\r\n  const [career, setCareer] = useState('');  // Hold the career from backend\r\n  const [careerImportance, setCareerImportance] = useState({});\r\n\r\n  const profile = useSelector(state => state.profile);\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    if (profile && profile.email) {\r\n      axios.get(`http://localhost:8000/api/user/${encodeURIComponent(profile.email)}`)\r\n        .then(res => {\r\n          setCurriculum(res.data.curriculum);\r\n          setYear(res.data.user.year);\r\n          setCareer(res.data.user.career || \"No career selected\");  // Set career from backend\r\n          setIsReturningUser(true);\r\n\r\n          if (res.data.user && res.data.user.ratings) {\r\n            const updatedRatings = {};\r\n            res.data.curriculum.subjects.forEach((subject) => {\r\n              updatedRatings[subject.name] = res.data.user.ratings[subject.name] || 0;\r\n            });\r\n            setRatings(updatedRatings);\r\n          }\r\n          setIsLoading(false);\r\n        })\r\n        .catch(err => {\r\n          console.error('Error fetching user data:', err);\r\n          setIsReturningUser(false);\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, [profile]);\r\n\r\n  // Predefined importance levels based on career\r\n  useEffect(() => {\r\n    const careerImportanceLevels = {\r\n      \"Data Analysis\": {\r\n        \"Math 101\": 4,\r\n        \"Physics 101\": 3,\r\n        \"Programming 101\": 5,\r\n        // Add other subjects and their importance\r\n      },\r\n      \"Software Engineer\": {\r\n        \"Math 101\": 3,\r\n        \"Physics 101\": 2,\r\n        \"Programming 101\": 5,\r\n      },\r\n      \"Web Development\": {\r\n        \"Math 101\": 2,\r\n        \"Physics 101\": 1,\r\n        \"Programming 101\": 5,\r\n      },\r\n      \"Other\": {\r\n        \"Math 101\": 3,\r\n        \"Physics 101\": 3,\r\n        \"Programming 101\": 3,\r\n      }\r\n    };\r\n\r\n    setCareerImportance(careerImportanceLevels[career] || {});\r\n  }, [career]);\r\n\r\n  const handleSubjectClick = (subject) => {\r\n    if (selectedSubject === subject) {\r\n      setShowPopup(false);\r\n      setSelectedSubject(null);\r\n    } else {\r\n      setSelectedSubject(subject);\r\n      setShowPopup(true);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const handleClosePopup = () => {\r\n    setShowPopup(false);\r\n    setSelectedSubject(null);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!profile || !profile.name || !profile.email || !year || !career) {\r\n      console.error(\"Missing profile, email, year or career information\");\r\n      return;\r\n    }\r\n\r\n    const userData = {\r\n      name: profile.name,\r\n      gmail: profile.email,\r\n      year,\r\n      career,\r\n    };\r\n\r\n    axios.post('http://localhost:8000/api/user/', userData)\r\n      .then(res => {\r\n        setCurriculum(res.data.curriculum);\r\n        setIsReturningUser(true);\r\n      })\r\n      .catch(err => {\r\n        console.error('Error:', err);\r\n      });\r\n  };\r\n\r\n  const onStarClick = (nextValue, prevValue, index) => {\r\n    const subjectName = curriculum.subjects[index].name;\r\n    setRatings({ ...ratings, [subjectName]: nextValue });\r\n\r\n    axios.post('http://localhost:8000/api/user/rating', {\r\n      gmail: profile.email,\r\n      subject: subjectName,\r\n      rating: nextValue,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).catch(err => {\r\n      console.error('Error:', err);\r\n    });\r\n  };\r\n\r\n\r\nconst getGrade = (rating) => {\r\n  if (rating === 10) return 4.0; // A\r\n  if (rating === 9) return 3.7;  // A-\r\n  if (rating === 8) return 3.3;  // B+\r\n  if (rating === 7) return 3.0;  // B\r\n  if (rating === 6) return 2.7;  // B-\r\n  if (rating === 5) return 2.3;  // C+\r\n  if (rating === 4) return 2.0;  // C\r\n  if (rating === 3) return 1.7;  // C-\r\n  if (rating === 2) return 1.0;  // D\r\n  if (rating === 1) return 0.7;  // D-\r\n  return 0.0; // F\r\n};\r\n\r\n\r\n// Function to calculate the predicted grades\r\n// Function to calculate the average grade and predict grades for ungraded subjects\r\nconst calculateGrades = () => {\r\n  let totalGradePoints = 0;\r\n  let gradedSubjects = 0;\r\n  let totalSubjects = curriculum.subjects.length;\r\n  \r\n  curriculum.subjects.forEach(subject => {\r\n    if (ratings[subject.name] !== undefined) {\r\n      // Add grade points for rated subjects\r\n      totalGradePoints += getGrade(ratings[subject.name]);\r\n      gradedSubjects++;\r\n    } else {\r\n      // Predict the minimum passing grade for ungraded subjects (C = 2.0)\r\n      totalGradePoints += 2.0; // Predicted grade for ungraded subjects\r\n    }\r\n  });\r\n\r\n  let averageGrade = (totalGradePoints / totalSubjects).toFixed(2);\r\n\r\n  return {\r\n    averageGrade,\r\n    gradedSubjects,\r\n    totalSubjects\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n  // Generate data for the Line Chart (combined graph)\r\n  const generateCombinedChartData = () => {\r\n    if (!curriculum || !careerImportance) return null;\r\n\r\n    const labels = curriculum.subjects.map(subject => subject.name);\r\n    const userRatingsData = labels.map(subjectName => ratings[subjectName] || 0);  // User's ratings\r\n    const careerImportanceData = labels.map(subjectName => careerImportance[subjectName] || 0);  // Career importance\r\n\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'User Ratings',\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: 'rgba(75,192,192,0.4)',\r\n          borderColor: 'rgba(75,192,192,1)',\r\n          data: userRatingsData\r\n        },\r\n        {\r\n          label: `${career} Career Importance`,\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: 'rgba(153,102,255,0.4)',\r\n          borderColor: 'rgba(153,102,255,1)',\r\n          data: careerImportanceData\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div className=\"App\">\r\n        <h1>Register and Get Curriculum</h1>\r\n\r\n        {profile && (\r\n          <>\r\n            <label>\r\n              Name: {profile.name} ({profile.email})\r\n            </label>\r\n\r\n            {isReturningUser ? (\r\n              <>\r\n                <p>Year: {year}, Career Interest: {career}</p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <label>\r\n                  Select Year:\r\n                  <select value={year} onChange={(e) => setYear(Number(e.target.value))}>\r\n                    <option value={1}>Year 1</option>\r\n                    <option value={2}>Year 2</option>\r\n                    <option value={3}>Year 3</option>\r\n                    <option value={4}>Year 4</option>\r\n                  </select>\r\n                </label>\r\n\r\n                <label>\r\n                  Select Career Interest:\r\n                  <select value={career} onChange={(e) => setCareer(e.target.value)}>\r\n                    <option value=\"\">Select a Career</option>\r\n                    <option value=\"Data Analysis\">Data Analysis</option>\r\n                    <option value=\"Software Engineer\">Software Engineer</option>\r\n                    <option value=\"Web Development\">Web Development</option>\r\n                    <option value=\"Other\">Other</option>\r\n                  </select>\r\n                </label>\r\n\r\n                <button onClick={handleSubmit}>\r\n                  Submit\r\n                </button>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n{curriculum && (\r\n  <div className=\"content-container\">\r\n    <div className=\"subject-list\">\r\n      <h2>Curriculum for Year {curriculum.year}</h2>\r\n\r\n      {/* Show grades for each subject */}\r\n      <div className=\"subject-container\">\r\n        {curriculum.subjects && curriculum.subjects.map((subject, index) => (\r\n          <div key={index} className=\"subject-wrapper\">\r\n            <div\r\n              className=\"subject-box\"\r\n              onClick={() => handleSubjectClick(subject)}\r\n              style={{ cursor: 'pointer' }}\r\n            >\r\n              <h3>{subject.name}</h3>\r\n              <p>Grade: {getGrade(ratings[subject.name] || 6)}</p> {/* Show the current or predicted grade */}\r\n            </div>\r\n\r\n            {showPopup && selectedSubject === subject && (\r\n              <div className=\"popup\">\r\n                <div className=\"popup-content\">\r\n                  <h3>Subject Details</h3>\r\n                  <p>Subject: {subject.name}</p>\r\n                  <p>Description: {subject.description}</p>\r\n\r\n                  {/* Star rating */}\r\n                  <div className=\"star-rating\">\r\n                    <h3>Your Rating:</h3>\r\n                    <StarRatingComponent\r\n                      name={subject.name}\r\n                      starCount={10}\r\n                      value={ratings[subject.name] || 0}\r\n                      onStarClick={(nextValue, prevValue) => onStarClick(nextValue, prevValue, index)}\r\n                    />\r\n                  </div>\r\n\r\n                  <button onClick={handleClosePopup}>Close</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Grade Summary */}\r\n<div className=\"grade-summary\">\r\n  <h2>Grade Summary</h2>\r\n  {(() => {\r\n    const { averageGrade, gradedSubjects, totalSubjects } = calculateGrades();\r\n    return (\r\n      <>\r\n        <p>Average Grade (4.0 scale): {averageGrade}</p>\r\n        <p>Subjects Graded: {gradedSubjects}/{totalSubjects}</p>\r\n      </>\r\n    );\r\n  })()}\r\n</div>\r\n\r\n    </div>\r\n\r\n    <div className=\"chart-container\">\r\n      <h2>User Ratings vs {career} Importance</h2>\r\n      {generateCombinedChartData() && (\r\n        <Line\r\n          data={generateCombinedChartData()}\r\n          options={{\r\n            scales: {\r\n              y: {\r\n                beginAtZero: true,\r\n                max: 10\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Course_2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}