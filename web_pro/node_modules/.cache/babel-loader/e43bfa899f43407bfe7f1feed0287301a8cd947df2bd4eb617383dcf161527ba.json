{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\Web_pro_2024\\\\web_pro\\\\src\\\\components\\\\Calendar\\\\YoutubeSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './YoutubeSearch.css';\nimport CalendarYoutubeModal from './CalendarYoutubeModal'; // Updated import to CalendarYoutubeModal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YoutubeSearch = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null); // To store the selected video\n  const [isModalOpen, setIsModalOpen] = useState(false); // To control modal visibility\n\n  const handleSearch = async () => {\n    try {\n      // Step 1: Search videos (fetch videoId)\n      const searchResponse = await fetch(`http://localhost:8000/search?query=${searchTerm}`);\n      const searchData = await searchResponse.json();\n      console.log('Search API Response:', searchData);\n\n      // Extract video IDs from the search results\n      const videoIds = searchData.map(video => video.id.videoId).join(',');\n      console.log('Extracted Video IDs:', videoIds);\n      if (videoIds) {\n        // Step 2: Fetch video details (including contentDetails) from FastAPI\n        const detailsResponse = await fetch(`http://localhost:8000/videos?video_ids=${videoIds}`);\n        const detailsData = await detailsResponse.json();\n        console.log('Video Details API Response:', detailsData);\n\n        // Combine search results with video details\n        const availableVideos = searchData.map(video => {\n          const details = detailsData.find(detail => detail.id === video.id.videoId);\n          return {\n            ...video,\n            contentDetails: details ? details.contentDetails : null\n          };\n        });\n        setVideos(availableVideos.filter(video => video.contentDetails)); // Only set videos with contentDetails\n      }\n    } catch (error) {\n      console.error('Error fetching YouTube data:', error);\n    }\n  };\n\n  // Open the modal with the selected video\n  const handleSelectVideo = video => {\n    setSelectedVideo(video);\n    setIsModalOpen(true); // Open the modal\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      placeholder: \"Search YouTube\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: videos.length > 0 ? videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video\",\n        children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: `https://www.youtube.com/embed/${video.id.videoId}`,\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true,\n          title: video.snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSelectVideo(video),\n          children: \"Schedule This\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)]\n      }, video.id.videoId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No results found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), isModalOpen && selectedVideo && /*#__PURE__*/_jsxDEV(CalendarYoutubeModal, {\n      video: selectedVideo,\n      onClose: () => setIsModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(YoutubeSearch, \"kScEygD9WfRcOXDWKZAYN0RUo7Q=\");\n_c = YoutubeSearch;\nexport default YoutubeSearch;\nvar _c;\n$RefreshReg$(_c, \"YoutubeSearch\");","map":{"version":3,"names":["React","useState","CalendarYoutubeModal","jsxDEV","_jsxDEV","YoutubeSearch","_s","searchTerm","setSearchTerm","videos","setVideos","selectedVideo","setSelectedVideo","isModalOpen","setIsModalOpen","handleSearch","searchResponse","fetch","searchData","json","console","log","videoIds","map","video","id","videoId","join","detailsResponse","detailsData","availableVideos","details","find","detail","contentDetails","filter","error","handleSelectVideo","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","length","src","frameBorder","allow","allowFullScreen","title","snippet","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/Web_pro_2024/web_pro/src/components/Calendar/YoutubeSearch.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './YoutubeSearch.css';\r\nimport CalendarYoutubeModal from './CalendarYoutubeModal'; // Updated import to CalendarYoutubeModal\r\n\r\nconst YoutubeSearch = () => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [videos, setVideos] = useState([]);\r\n    const [selectedVideo, setSelectedVideo] = useState(null); // To store the selected video\r\n    const [isModalOpen, setIsModalOpen] = useState(false); // To control modal visibility\r\n\r\n    const handleSearch = async () => {\r\n        try {\r\n            // Step 1: Search videos (fetch videoId)\r\n            const searchResponse = await fetch(`http://localhost:8000/search?query=${searchTerm}`);\r\n            const searchData = await searchResponse.json();\r\n            console.log('Search API Response:', searchData);\r\n\r\n            // Extract video IDs from the search results\r\n            const videoIds = searchData.map(video => video.id.videoId).join(',');\r\n            console.log('Extracted Video IDs:', videoIds);\r\n\r\n            if (videoIds) {\r\n                // Step 2: Fetch video details (including contentDetails) from FastAPI\r\n                const detailsResponse = await fetch(`http://localhost:8000/videos?video_ids=${videoIds}`);\r\n                const detailsData = await detailsResponse.json();\r\n                console.log('Video Details API Response:', detailsData);\r\n\r\n                // Combine search results with video details\r\n                const availableVideos = searchData.map(video => {\r\n                    const details = detailsData.find(detail => detail.id === video.id.videoId);\r\n                    return { ...video, contentDetails: details ? details.contentDetails : null };\r\n                });\r\n\r\n                setVideos(availableVideos.filter(video => video.contentDetails)); // Only set videos with contentDetails\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching YouTube data:', error);\r\n        }\r\n    };\r\n    \r\n    \r\n\r\n    // Open the modal with the selected video\r\n    const handleSelectVideo = (video) => {\r\n        setSelectedVideo(video);\r\n        setIsModalOpen(true); // Open the modal\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                placeholder=\"Search YouTube\"\r\n            />\r\n            <button onClick={handleSearch}>Search</button>\r\n\r\n            <div className=\"video-container\">\r\n                {videos.length > 0 ? (\r\n                    videos.map((video) => (\r\n                        <div key={video.id.videoId} className=\"video\">\r\n                            <iframe\r\n                                src={`https://www.youtube.com/embed/${video.id.videoId}`}\r\n                                frameBorder=\"0\"\r\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                allowFullScreen\r\n                                title={video.snippet.title}\r\n                            ></iframe>\r\n                            {/* Button to open modal */}\r\n                            <button onClick={() => handleSelectVideo(video)}>Schedule This</button>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>No results found</p>\r\n                )}\r\n            </div>\r\n\r\n            {/* Show Calendar Youtube Modal when a video is selected */}\r\n            {isModalOpen && selectedVideo && (\r\n                <CalendarYoutubeModal \r\n                    video={selectedVideo} \r\n                    onClose={() => setIsModalOpen(false)} \r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default YoutubeSearch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}