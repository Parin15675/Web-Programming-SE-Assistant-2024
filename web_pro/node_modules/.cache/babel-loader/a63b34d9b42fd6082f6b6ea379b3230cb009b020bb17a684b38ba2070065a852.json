{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\Web_pro_2024\\\\web_pro\\\\src\\\\components\\\\Calendar\\\\CalendarYoutubeModal.js\";\nimport Calendar from './Calendar';\nimport './CalendarYoutubeModal.css';\n\n// Helper function to parse ISO 8601 duration to minutes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst parseISO8601DurationToMinutes = isoDuration => {\n  const regex = /PT(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+)S)?/;\n  const matches = isoDuration.match(regex);\n  const hours = matches[1] ? parseInt(matches[1], 10) : 0;\n  const minutes = matches[2] ? parseInt(matches[2], 10) : 0;\n  const seconds = matches[3] ? parseInt(matches[3], 10) : 0;\n\n  // Convert the parsed hours, minutes, and seconds to total minutes\n  let totalMinutes = hours * 60 + minutes;\n\n  // If seconds are greater than or equal to 30, round up the minutes\n  if (seconds >= 30) {\n    totalMinutes += 1;\n  }\n  return totalMinutes;\n};\nconst CalendarYoutubeModal = ({\n  video,\n  onClose\n}) => {\n  // Parse the video duration from ISO 8601 format to minutes\n  const videoDuration = parseISO8601DurationToMinutes(video.contentDetails.duration);\n  const handleSave = startTime => {\n    // Calculate the end time based on start time and the parsed video duration\n    const endTime = startTime + videoDuration;\n\n    // Log or handle the result\n    console.log(`Saving ${video.snippet.title} with start time ${startTime} and end time ${endTime}`);\n\n    // Handle actual scheduling and saving logic...\n\n    onClose(); // Close the modal after saving\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"youtube-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"youtube-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: `https://www.youtube.com/embed/${video.id.videoId}`,\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true,\n          title: video.snippet.title,\n          className: \"video-display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: video.snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Video Duration: \", videoDuration.toFixed(2), \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          view: \"week\",\n          onSelectSlot: startTime => handleSave(startTime) // Call handleSave when a time slot is selected\n          ,\n          videoTitle: video.snippet.title,\n          videoDuration: videoDuration,\n          videoId: video.id.videoId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_c = CalendarYoutubeModal;\nexport default CalendarYoutubeModal;\nvar _c;\n$RefreshReg$(_c, \"CalendarYoutubeModal\");","map":{"version":3,"names":["Calendar","jsxDEV","_jsxDEV","parseISO8601DurationToMinutes","isoDuration","regex","matches","match","hours","parseInt","minutes","seconds","totalMinutes","CalendarYoutubeModal","video","onClose","videoDuration","contentDetails","duration","handleSave","startTime","endTime","console","log","snippet","title","className","children","src","id","videoId","frameBorder","allow","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","view","onSelectSlot","videoTitle","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/Web_pro_2024/web_pro/src/components/Calendar/CalendarYoutubeModal.js"],"sourcesContent":["import Calendar from './Calendar';\r\nimport './CalendarYoutubeModal.css';\r\n\r\n// Helper function to parse ISO 8601 duration to minutes\r\nconst parseISO8601DurationToMinutes = (isoDuration) => {\r\n    const regex = /PT(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+)S)?/;\r\n    const matches = isoDuration.match(regex);\r\n    const hours = matches[1] ? parseInt(matches[1], 10) : 0;\r\n    const minutes = matches[2] ? parseInt(matches[2], 10) : 0;\r\n    const seconds = matches[3] ? parseInt(matches[3], 10) : 0;\r\n\r\n    // Convert the parsed hours, minutes, and seconds to total minutes\r\n    let totalMinutes = (hours * 60) + minutes;\r\n\r\n    // If seconds are greater than or equal to 30, round up the minutes\r\n    if (seconds >= 30) {\r\n        totalMinutes += 1;\r\n    }\r\n\r\n    return totalMinutes;\r\n};\r\n\r\n\r\nconst CalendarYoutubeModal = ({ video, onClose }) => {\r\n    // Parse the video duration from ISO 8601 format to minutes\r\n    const videoDuration = parseISO8601DurationToMinutes(video.contentDetails.duration);\r\n\r\n    const handleSave = (startTime) => {\r\n        // Calculate the end time based on start time and the parsed video duration\r\n        const endTime = startTime + videoDuration;\r\n\r\n        // Log or handle the result\r\n        console.log(`Saving ${video.snippet.title} with start time ${startTime} and end time ${endTime}`);\r\n        \r\n        // Handle actual scheduling and saving logic...\r\n        \r\n        onClose(); // Close the modal after saving\r\n    };\r\n\r\n    return (\r\n        <div className=\"youtube-modal-overlay\">\r\n            <div className=\"youtube-modal-content\">\r\n                <div className=\"left\">\r\n                    {/* Display the YouTube video in an iframe */}\r\n                    <iframe\r\n                        src={`https://www.youtube.com/embed/${video.id.videoId}`}\r\n                        frameBorder=\"0\"\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                        allowFullScreen\r\n                        title={video.snippet.title}\r\n                        className=\"video-display\"\r\n                    ></iframe>\r\n                    <h3>{video.snippet.title}</h3>\r\n                    <p>Video Duration: {videoDuration.toFixed(2)} minutes</p>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <Calendar\r\n                        view=\"week\"\r\n                        onSelectSlot={(startTime) => handleSave(startTime)} // Call handleSave when a time slot is selected\r\n                        videoTitle={video.snippet.title}\r\n                        videoDuration={videoDuration}\r\n                        videoId={video.id.videoId}\r\n                    />\r\n                </div>\r\n                <button onClick={onClose}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default CalendarYoutubeModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}