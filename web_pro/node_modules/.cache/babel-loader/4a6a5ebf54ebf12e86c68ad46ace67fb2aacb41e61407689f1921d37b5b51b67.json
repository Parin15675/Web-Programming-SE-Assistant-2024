{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\Web_pro_2024\\\\web_pro\\\\src\\\\components\\\\Course\\\\Course_2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Nav from '../Nav';\nimport { Line } from 'react-chartjs-2'; // We will use Line chart for both datasets\nimport 'chart.js/auto'; // Import Chart.js\nimport \"./Course_2.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Course_2() {\n  _s();\n  const [year, setYear] = useState(1);\n  const [curriculum, setCurriculum] = useState(null);\n  const [isReturningUser, setIsReturningUser] = useState(false);\n  const [selectedSubject, setSelectedSubject] = useState(null);\n  const [showPopup, setShowPopup] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [ratings, setRatings] = useState({}); // Ratings state\n  const [career, setCareer] = useState(''); // Hold the career from backend\n  const [careerRequirement, setCareerRequirement] = useState(3.5); // Default requirement for Software Engineer\n\n  const profile = JSON.parse(localStorage.getItem('profile')); // Assuming profile is stored locally\n\n  useEffect(() => {\n    if (profile && profile.email) {\n      axios.get(`http://localhost:8000/api/user/${encodeURIComponent(profile.email)}`).then(res => {\n        setCurriculum(res.data.curriculum);\n        setYear(res.data.user.year);\n        setCareer(res.data.user.career || \"No career selected\");\n        setIsReturningUser(true);\n        if (res.data.user && res.data.user.ratings) {\n          const updatedRatings = {};\n          res.data.curriculum.subjects.forEach(subject => {\n            updatedRatings[subject.name] = res.data.user.ratings[subject.name] || '';\n          });\n          setRatings(updatedRatings);\n        }\n        setIsLoading(false);\n      }).catch(err => {\n        console.error('Error fetching user data:', err);\n        setIsReturningUser(false);\n        setIsLoading(false);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, [profile]);\n\n  // Predefined career requirements\n  useEffect(() => {\n    const careerRequirements = {\n      \"Data Analysis\": 3.75,\n      \"Software Engineer\": 3.5,\n      \"Web Development\": 3.5,\n      \"Other\": 3.0\n    };\n    setCareerRequirement(careerRequirements[career] || 3.0);\n  }, [career]);\n  const handleSubjectClick = subject => {\n    if (selectedSubject === subject) {\n      setShowPopup(false);\n      setSelectedSubject(null);\n    } else {\n      setSelectedSubject(subject);\n      setShowPopup(true);\n    }\n  };\n  const handleClosePopup = () => {\n    setShowPopup(false);\n    setSelectedSubject(null);\n  };\n  const handleRatingChange = (subjectName, value) => {\n    setRatings({\n      ...ratings,\n      [subjectName]: value\n    });\n\n    // Save the updated rating to the backend\n    const updatedRating = parseFloat(value);\n    if (updatedRating >= 0 && updatedRating <= 10) {\n      // Assuming a rating scale of 0-10\n      axios.post('http://localhost:8000/api/user/rating', {\n        email: profile.email,\n        // Add user email for identification\n        subject: subjectName,\n        // The subject the rating corresponds to\n        rating: updatedRating // The new rating value\n      }).then(response => {\n        console.log('Rating saved successfully:', response.data);\n      }).catch(error => {\n        console.error('Error saving rating:', error);\n      });\n    } else {\n      console.error('Invalid rating input. Please enter a rating between 0 and 10.');\n    }\n  };\n\n  // Calculate predicted rating for missing subjects\n  const calculatePredictedRating = () => {\n    const requiredAverage = careerRequirement; // Assume this is based on a scale from 0-10\n    let enteredRatings = 0,\n      enteredTotal = 0;\n    curriculum.subjects.forEach(subject => {\n      const rating = parseFloat(ratings[subject.name]);\n      if (rating) {\n        enteredRatings += 1;\n        enteredTotal += rating;\n      }\n    });\n    const remainingSubjects = curriculum.subjects.length - enteredRatings;\n    if (remainingSubjects === 0) {\n      return 0; // All ratings entered, no prediction needed\n    }\n    const predictedRating = (requiredAverage * curriculum.subjects.length - enteredTotal) / remainingSubjects;\n    return predictedRating;\n  };\n\n  // Check if achieving the required average rating is possible\n  const isPossibleToAchieveRequirement = () => {\n    const predictedRating = calculatePredictedRating();\n    return predictedRating <= 10; // It's impossible if the predicted rating exceeds the maximum of 10\n  };\n\n  // Calculate the current average rating and what the user needs\n  const calculateCurrentAverageRating = () => {\n    let enteredTotal = 0,\n      enteredRatings = 0;\n    curriculum.subjects.forEach(subject => {\n      const rating = parseFloat(ratings[subject.name]);\n      if (rating) {\n        enteredRatings += 1;\n        enteredTotal += rating;\n      }\n    });\n    return enteredRatings ? (enteredTotal / enteredRatings).toFixed(2) : 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!profile || !profile.name || !profile.email || !year || !career) {\n      console.error(\"Missing profile, email, year or career information\");\n      return;\n    }\n    const userData = {\n      name: profile.name,\n      gmail: profile.email,\n      year,\n      career\n    };\n    axios.post('http://localhost:8000/api/user/', userData).then(res => {\n      setCurriculum(res.data.curriculum);\n      setIsReturningUser(true);\n    }).catch(err => {\n      console.error('Error:', err);\n    });\n  };\n\n  // Generate data for the Line Chart (combined graph)\n  const generateCombinedChartData = () => {\n    if (!curriculum || !careerRequirement) return null;\n    const labels = curriculum.subjects.map(subject => subject.name);\n    const userRatingsData = labels.map(subjectName => parseFloat(ratings[subjectName]) || 0); // User's ratings\n    const predictedRating = calculatePredictedRating();\n    const predictedRatingsData = labels.map(subjectName => parseFloat(ratings[subjectName]) || Math.min(predictedRating, 10)); // Predicted rating for missing subjects (capped at 10)\n\n    return {\n      labels,\n      datasets: [{\n        label: 'User Ratings',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        data: userRatingsData\n      }, {\n        label: `${career} Predicted Rating`,\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(153,102,255,0.4)',\n        borderColor: 'rgba(153,102,255,1)',\n        data: predictedRatingsData\n      }]\n    };\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register and Get Curriculum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), profile && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name: \", profile.name, \" (\", profile.email, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), isReturningUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Year: \", year, \", Career Interest: \", career]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select Year:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: year,\n              onChange: e => setYear(Number(e.target.value)),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 1,\n                children: \"Year 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 2,\n                children: \"Year 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 3,\n                children: \"Year 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 4,\n                children: \"Year 4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select Career Interest:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: career,\n              onChange: e => setCareer(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a Career\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Data Analysis\",\n                children: \"Data Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Software Engineer\",\n                children: \"Software Engineer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Web Development\",\n                children: \"Web Development\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Other\",\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true), curriculum && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subject-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Curriculum for Year \", curriculum.year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subject-container\",\n            children: curriculum.subjects && curriculum.subjects.map((subject, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subject-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subject-box\",\n                onClick: () => handleSubjectClick(subject),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: subject.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this), showPopup && selectedSubject === subject && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"popup\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"popup-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Subject Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Subject: \", subject.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Description: \", subject.description]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"rating-input\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: \"Your Rating:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      min: \"0\",\n                      max: \"10\",\n                      step: \"0.1\",\n                      value: ratings[subject.name] || '',\n                      onChange: e => handleRatingChange(subject.name, e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleClosePopup,\n                    children: \"Close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"User Ratings vs \", career, \" Predicted Rating\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), generateCombinedChartData() && /*#__PURE__*/_jsxDEV(Line, {\n            data: generateCombinedChartData(),\n            options: {\n              scales: {\n                y: {\n                  beginAtZero: true,\n                  max: 10\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Rating Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Average Rating: \", calculateCurrentAverageRating()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), isPossibleToAchieveRequirement() ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"To meet the requirement of \", careerRequirement, \" average, you need a rating of \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: Math.min(calculatePredictedRating(), 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 97\n            }, this), \" in remaining subjects.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red'\n            },\n            children: [\"It is impossible to meet the required average of \", careerRequirement, \" based on your current ratings. Please consider retaking some subjects to improve your ratings.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Course_2, \"PAQaKZEWf+Jf7i8iHwiqOCXiCUQ=\");\n_c = Course_2;\nexport default Course_2;\nvar _c;\n$RefreshReg$(_c, \"Course_2\");","map":{"version":3,"names":["React","useState","useEffect","axios","Nav","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","Course_2","_s","year","setYear","curriculum","setCurriculum","isReturningUser","setIsReturningUser","selectedSubject","setSelectedSubject","showPopup","setShowPopup","isLoading","setIsLoading","ratings","setRatings","career","setCareer","careerRequirement","setCareerRequirement","profile","JSON","parse","localStorage","getItem","email","get","encodeURIComponent","then","res","data","user","updatedRatings","subjects","forEach","subject","name","catch","err","console","error","careerRequirements","handleSubjectClick","handleClosePopup","handleRatingChange","subjectName","value","updatedRating","parseFloat","post","rating","response","log","calculatePredictedRating","requiredAverage","enteredRatings","enteredTotal","remainingSubjects","length","predictedRating","isPossibleToAchieveRequirement","calculateCurrentAverageRating","toFixed","handleSubmit","e","preventDefault","userData","gmail","generateCombinedChartData","labels","map","userRatingsData","predictedRatingsData","Math","min","datasets","label","fill","lineTension","backgroundColor","borderColor","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","Number","target","onClick","index","style","cursor","description","type","max","step","options","scales","y","beginAtZero","color","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/Web_pro_2024/web_pro/src/components/Course/Course_2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Nav from '../Nav';\r\nimport { Line } from 'react-chartjs-2'; // We will use Line chart for both datasets\r\nimport 'chart.js/auto'; // Import Chart.js\r\nimport \"./Course_2.css\";\r\n\r\nfunction Course_2() {\r\n  const [year, setYear] = useState(1);\r\n  const [curriculum, setCurriculum] = useState(null);\r\n  const [isReturningUser, setIsReturningUser] = useState(false);\r\n  const [selectedSubject, setSelectedSubject] = useState(null);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [ratings, setRatings] = useState({}); // Ratings state\r\n  const [career, setCareer] = useState(''); // Hold the career from backend\r\n  const [careerRequirement, setCareerRequirement] = useState(3.5); // Default requirement for Software Engineer\r\n\r\n  const profile = JSON.parse(localStorage.getItem('profile')); // Assuming profile is stored locally\r\n\r\n  useEffect(() => {\r\n    if (profile && profile.email) {\r\n      axios.get(`http://localhost:8000/api/user/${encodeURIComponent(profile.email)}`)\r\n        .then(res => {\r\n          setCurriculum(res.data.curriculum);\r\n          setYear(res.data.user.year);\r\n          setCareer(res.data.user.career || \"No career selected\");\r\n          setIsReturningUser(true);\r\n\r\n          if (res.data.user && res.data.user.ratings) {\r\n            const updatedRatings = {};\r\n            res.data.curriculum.subjects.forEach((subject) => {\r\n              updatedRatings[subject.name] = res.data.user.ratings[subject.name] || '';\r\n            });\r\n            setRatings(updatedRatings);\r\n          }\r\n          setIsLoading(false);\r\n        })\r\n        .catch(err => {\r\n          console.error('Error fetching user data:', err);\r\n          setIsReturningUser(false);\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, [profile]);\r\n\r\n  // Predefined career requirements\r\n  useEffect(() => {\r\n    const careerRequirements = {\r\n      \"Data Analysis\": 3.75,\r\n      \"Software Engineer\": 3.5,\r\n      \"Web Development\": 3.5,\r\n      \"Other\": 3.0\r\n    };\r\n\r\n    setCareerRequirement(careerRequirements[career] || 3.0);\r\n  }, [career]);\r\n\r\n  const handleSubjectClick = (subject) => {\r\n    if (selectedSubject === subject) {\r\n      setShowPopup(false);\r\n      setSelectedSubject(null);\r\n    } else {\r\n      setSelectedSubject(subject);\r\n      setShowPopup(true);\r\n    }\r\n  };\r\n\r\n  const handleClosePopup = () => {\r\n    setShowPopup(false);\r\n    setSelectedSubject(null);\r\n  };\r\n\r\n  const handleRatingChange = (subjectName, value) => {\r\n    setRatings({ ...ratings, [subjectName]: value });\r\n\r\n    // Save the updated rating to the backend\r\n    const updatedRating = parseFloat(value);\r\n    if (updatedRating >= 0 && updatedRating <= 10) {  // Assuming a rating scale of 0-10\r\n      axios.post('http://localhost:8000/api/user/rating', {\r\n        email: profile.email,    // Add user email for identification\r\n        subject: subjectName,    // The subject the rating corresponds to\r\n        rating: updatedRating    // The new rating value\r\n      }).then(response => {\r\n        console.log('Rating saved successfully:', response.data);\r\n      }).catch(error => {\r\n        console.error('Error saving rating:', error);\r\n      });\r\n    } else {\r\n      console.error('Invalid rating input. Please enter a rating between 0 and 10.');\r\n    }\r\n  };\r\n\r\n  // Calculate predicted rating for missing subjects\r\n  const calculatePredictedRating = () => {\r\n    const requiredAverage = careerRequirement; // Assume this is based on a scale from 0-10\r\n    let enteredRatings = 0, enteredTotal = 0;\r\n\r\n    curriculum.subjects.forEach((subject) => {\r\n      const rating = parseFloat(ratings[subject.name]);\r\n      if (rating) {\r\n        enteredRatings += 1;\r\n        enteredTotal += rating;\r\n      }\r\n    });\r\n\r\n    const remainingSubjects = curriculum.subjects.length - enteredRatings;\r\n    if (remainingSubjects === 0) {\r\n      return 0; // All ratings entered, no prediction needed\r\n    }\r\n\r\n    const predictedRating = (requiredAverage * curriculum.subjects.length - enteredTotal) / remainingSubjects;\r\n    return predictedRating;\r\n  };\r\n\r\n  // Check if achieving the required average rating is possible\r\n  const isPossibleToAchieveRequirement = () => {\r\n    const predictedRating = calculatePredictedRating();\r\n    return predictedRating <= 10; // It's impossible if the predicted rating exceeds the maximum of 10\r\n  };\r\n\r\n  // Calculate the current average rating and what the user needs\r\n  const calculateCurrentAverageRating = () => {\r\n    let enteredTotal = 0, enteredRatings = 0;\r\n\r\n    curriculum.subjects.forEach((subject) => {\r\n      const rating = parseFloat(ratings[subject.name]);\r\n      if (rating) {\r\n        enteredRatings += 1;\r\n        enteredTotal += rating;\r\n      }\r\n    });\r\n\r\n    return enteredRatings ? (enteredTotal / enteredRatings).toFixed(2) : 0;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!profile || !profile.name || !profile.email || !year || !career) {\r\n      console.error(\"Missing profile, email, year or career information\");\r\n      return;\r\n    }\r\n\r\n    const userData = {\r\n      name: profile.name,\r\n      gmail: profile.email,\r\n      year,\r\n      career,\r\n    };\r\n\r\n    axios.post('http://localhost:8000/api/user/', userData)\r\n      .then(res => {\r\n        setCurriculum(res.data.curriculum);\r\n        setIsReturningUser(true);\r\n      })\r\n      .catch(err => {\r\n        console.error('Error:', err);\r\n      });\r\n  };\r\n\r\n  // Generate data for the Line Chart (combined graph)\r\n  const generateCombinedChartData = () => {\r\n    if (!curriculum || !careerRequirement) return null;\r\n\r\n    const labels = curriculum.subjects.map(subject => subject.name);\r\n    const userRatingsData = labels.map(subjectName => parseFloat(ratings[subjectName]) || 0); // User's ratings\r\n    const predictedRating = calculatePredictedRating();\r\n    const predictedRatingsData = labels.map(subjectName => parseFloat(ratings[subjectName]) || Math.min(predictedRating, 10)); // Predicted rating for missing subjects (capped at 10)\r\n\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'User Ratings',\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: 'rgba(75,192,192,0.4)',\r\n          borderColor: 'rgba(75,192,192,1)',\r\n          data: userRatingsData\r\n        },\r\n        {\r\n          label: `${career} Predicted Rating`,\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: 'rgba(153,102,255,0.4)',\r\n          borderColor: 'rgba(153,102,255,1)',\r\n          data: predictedRatingsData\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div className=\"App\">\r\n        <h1>Register and Get Curriculum</h1>\r\n\r\n        {profile && (\r\n          <>\r\n            <label>\r\n              Name: {profile.name} ({profile.email})\r\n            </label>\r\n\r\n            {isReturningUser ? (\r\n              <>\r\n                <p>Year: {year}, Career Interest: {career}</p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <label>\r\n                  Select Year:\r\n                  <select value={year} onChange={(e) => setYear(Number(e.target.value))}>\r\n                    <option value={1}>Year 1</option>\r\n                    <option value={2}>Year 2</option>\r\n                    <option value={3}>Year 3</option>\r\n                    <option value={4}>Year 4</option>\r\n                  </select>\r\n                </label>\r\n\r\n                <label>\r\n                  Select Career Interest:\r\n                  <select value={career} onChange={(e) => setCareer(e.target.value)}>\r\n                    <option value=\"\">Select a Career</option>\r\n                    <option value=\"Data Analysis\">Data Analysis</option>\r\n                    <option value=\"Software Engineer\">Software Engineer</option>\r\n                    <option value=\"Web Development\">Web Development</option>\r\n                    <option value=\"Other\">Other</option>\r\n                  </select>\r\n                </label>\r\n\r\n                <button onClick={handleSubmit}>\r\n                  Submit\r\n                </button>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {curriculum && (\r\n          <div className=\"content-container\">\r\n            <div className=\"subject-list\">\r\n              <h2>Curriculum for Year {curriculum.year}</h2>\r\n              <div className=\"subject-container\">\r\n                {curriculum.subjects && curriculum.subjects.map((subject, index) => (\r\n                  <div key={index} className=\"subject-wrapper\">\r\n                    <div\r\n                      className=\"subject-box\"\r\n                      onClick={() => handleSubjectClick(subject)}\r\n                      style={{ cursor: 'pointer' }}\r\n                    >\r\n                      <h3>{subject.name}</h3>\r\n                    </div>\r\n\r\n                    {/* Popup for subject details and rating input */}\r\n                    {showPopup && selectedSubject === subject && (\r\n                      <div className=\"popup\">\r\n                        <div className=\"popup-content\">\r\n                          <h3>Subject Details</h3>\r\n                          <p>Subject: {subject.name}</p>\r\n                          <p>Description: {subject.description}</p>\r\n\r\n                          {/* Rating input inside the popup */}\r\n                          <div className=\"rating-input\">\r\n                            <h3>Your Rating:</h3>\r\n                            <input\r\n                              type=\"number\"\r\n                              min=\"0\"\r\n                              max=\"10\"\r\n                              step=\"0.1\"\r\n                              value={ratings[subject.name] || ''}\r\n                              onChange={(e) => handleRatingChange(subject.name, e.target.value)}\r\n                            />\r\n                          </div>\r\n\r\n                          <button onClick={handleClosePopup}>Close</button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"chart-container\">\r\n              <h2>User Ratings vs {career} Predicted Rating</h2>\r\n              {generateCombinedChartData() && (\r\n                <Line\r\n                  data={generateCombinedChartData()}\r\n                  options={{\r\n                    scales: {\r\n                      y: {\r\n                        beginAtZero: true,\r\n                        max: 10\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            {/* Display current average and predicted rating required */}\r\n            <div className=\"rating-info\">\r\n              <h2>Rating Information</h2>\r\n              <p>Current Average Rating: {calculateCurrentAverageRating()}</p>\r\n              {isPossibleToAchieveRequirement() ? (\r\n                <p>To meet the requirement of {careerRequirement} average, you need a rating of <strong>{Math.min(calculatePredictedRating(), 10)}</strong> in remaining subjects.</p>\r\n              ) : (\r\n                <p style={{ color: 'red' }}>It is impossible to meet the required average of {careerRequirement} based on your current ratings. Please consider retaking some subjects to improve your ratings.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Course_2;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}