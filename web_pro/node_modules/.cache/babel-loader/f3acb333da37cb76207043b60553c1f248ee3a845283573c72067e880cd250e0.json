{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\Web_pro_2024\\\\web_pro\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport { gapi } from 'gapi-script';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Nav from '../Nav';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const clientId = \"989892277796-hr8ep4fu8ecrjn84gadef7655fpoucvb.apps.googleusercontent.com\";\n  const dispatch = useDispatch();\n  const profile = useSelector(state => state.profile);\n\n  // Check if user is already logged in using localStorage\n  useEffect(() => {\n    const storedProfile = localStorage.getItem('profile'); // Get profile from localStorage\n    console.log(\"Stored profile from localStorage:\", storedProfile); // Debug: Check stored profile\n    if (storedProfile) {\n      const parsedProfile = JSON.parse(storedProfile);\n      console.log(\"Parsed profile:\", parsedProfile); // Debug: Check parsed profile\n      dispatch({\n        type: 'SET_PROFILE',\n        payload: parsedProfile // Set profile to Redux\n      });\n    }\n    const initClient = () => {\n      gapi.client.init({\n        clientId: clientId,\n        scope: ''\n      });\n    };\n    gapi.load(\"client:auth2\", initClient);\n  }, [dispatch]);\n  const onSuccess = res => {\n    console.log('Login success response:', res); // Debug: Check login response\n    dispatch({\n      type: 'SET_PROFILE',\n      payload: res.profileObj\n    });\n    localStorage.setItem('profile', JSON.stringify(res.profileObj)); // Store profile in localStorage\n    console.log('Profile saved in localStorage:', res.profileObj); // Debug: Confirm saving profile\n  };\n  const onFailure = res => {\n    console.log('Login failure response:', res); // Debug: Check failure response\n  };\n  const logOut = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n    localStorage.removeItem('profile'); // Remove profile from localStorage when logged out\n    console.log('Profile removed from localStorage'); // Debug: Confirm profile removal\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"React Google Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), profile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile.imageUrl,\n        alt: \"user image\",\n        onError: e => e.target.src = 'default-image-path.jpg'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"User Logged In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", profile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", profile.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogout, {\n        clientId: clientId,\n        buttonText: \"Log out\",\n        onLogoutSuccess: logOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: clientId,\n      buttonText: \"Sign in with Google\",\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      cookiePolicy: 'single_host_origin',\n      isSignedIn: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"weTk0xp1uQHAk8jOpKgx6yIjBHU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","GoogleLogin","GoogleLogout","gapi","useDispatch","useSelector","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","clientId","dispatch","profile","state","storedProfile","localStorage","getItem","console","log","parsedProfile","JSON","parse","type","payload","initClient","client","init","scope","load","onSuccess","res","profileObj","setItem","stringify","onFailure","logOut","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","src","imageUrl","alt","onError","e","target","name","email","buttonText","onLogoutSuccess","cookiePolicy","isSignedIn","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/Web_pro_2024/web_pro/src/components/Login/Login.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\nimport { gapi } from 'gapi-script';\r\nimport { useDispatch, useSelector } from 'react-redux';  \r\nimport Nav from '../Nav';\r\n\r\nconst Login = () => {\r\n    const clientId = \"989892277796-hr8ep4fu8ecrjn84gadef7655fpoucvb.apps.googleusercontent.com\";\r\n    const dispatch = useDispatch();\r\n    const profile = useSelector(state => state.profile); \r\n\r\n    // Check if user is already logged in using localStorage\r\n    useEffect(() => {\r\n        const storedProfile = localStorage.getItem('profile'); // Get profile from localStorage\r\n        console.log(\"Stored profile from localStorage:\", storedProfile); // Debug: Check stored profile\r\n        if (storedProfile) {\r\n            const parsedProfile = JSON.parse(storedProfile);\r\n            console.log(\"Parsed profile:\", parsedProfile); // Debug: Check parsed profile\r\n            dispatch({\r\n                type: 'SET_PROFILE',\r\n                payload: parsedProfile // Set profile to Redux\r\n            });\r\n        }\r\n        \r\n        const initClient = () => {\r\n            gapi.client.init({\r\n                clientId: clientId,\r\n                scope: ''\r\n            });\r\n        };\r\n        gapi.load(\"client:auth2\", initClient);\r\n    }, [dispatch]);\r\n\r\n    const onSuccess = (res) => {\r\n        console.log('Login success response:', res); // Debug: Check login response\r\n        dispatch({\r\n            type: 'SET_PROFILE',\r\n            payload: res.profileObj\r\n        });\r\n        localStorage.setItem('profile', JSON.stringify(res.profileObj)); // Store profile in localStorage\r\n        console.log('Profile saved in localStorage:', res.profileObj); // Debug: Confirm saving profile\r\n    };\r\n\r\n    const onFailure = (res) => {\r\n        console.log('Login failure response:', res); // Debug: Check failure response\r\n    };\r\n\r\n    const logOut = () => {\r\n        dispatch({\r\n            type: 'LOGOUT'\r\n        });\r\n        localStorage.removeItem('profile'); // Remove profile from localStorage when logged out\r\n        console.log('Profile removed from localStorage'); // Debug: Confirm profile removal\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Nav></Nav>\r\n            <h2>React Google Login</h2>\r\n            <br />\r\n            {profile ? (\r\n                <>\r\n                    <img src={profile.imageUrl} alt=\"user image\" onError={(e) => e.target.src = 'default-image-path.jpg'} />\r\n                    <h3>User Logged In</h3>\r\n                    <p>Name: {profile.name}</p>\r\n                    <p>Email: {profile.email}</p>\r\n                    <br />\r\n                    <GoogleLogout clientId={clientId} buttonText='Log out' onLogoutSuccess={logOut} />\r\n                </>\r\n            ) : (\r\n                <GoogleLogin\r\n                    clientId={clientId}\r\n                    buttonText=\"Sign in with Google\"\r\n                    onSuccess={onSuccess}\r\n                    onFailure={onFailure}\r\n                    cookiePolicy={'single_host_origin'}\r\n                    isSignedIn={true}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}