{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\Web_pro_2024\\\\web_pro\\\\src\\\\components\\\\Calendar\\\\Calendar.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Calendar.css';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\n\n// Helper function to reset the time of a Date object to midnight\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst resetTimeToMidnight = date => {\n  const newDate = new Date(date);\n  newDate.setHours(0, 0, 0, 0); // Set time to 00:00:00\n  return newDate;\n};\nconst Calendar = ({\n  onSelectSlot = () => {},\n  videoTitle = null,\n  videoDuration = null,\n  videoId = null\n}) => {\n  _s();\n  const profile = useSelector(state => state.profile);\n  const [currentDate, setCurrentDate] = useState(resetTimeToMidnight(new Date()));\n  const [view, setView] = useState('week');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [title, setTitle] = useState(videoTitle || \"\");\n  const [details, setDetails] = useState(\"\");\n  const [color, setColor] = useState(\"#e81416\");\n  const [schedules, setSchedules] = useState({}); // Store schedules in an object\n  const [startTime, setStartTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  const [youtubeVideoId, setYoutubeVideoId] = useState(videoId || null);\n  const [isVideoModalOpen, setIsVideoModalOpen] = useState(false); // State for the video modal\n\n  // Auto-calculate endTime if videoDuration is provided\n  useEffect(() => {\n    if (videoDuration && startTime && startTime.minute !== undefined) {\n      const calculatedEndTime = startTime.minute + Math.floor(videoDuration); // Ensure videoDuration is in minutes\n      setEndTime({\n        minute: calculatedEndTime\n      });\n    }\n  }, [videoDuration, startTime]);\n\n  // Load schedules from local storage when component mounts\n  useEffect(() => {\n    const storedSchedules = localStorage.getItem('calendarSchedules');\n    if (storedSchedules) {\n      setSchedules(JSON.parse(storedSchedules));\n    }\n  }, []);\n  useEffect(() => {\n    if (profile && profile.email) {\n      // Fetch the schedules for the logged-in user\n      axios.get(`http://localhost:8000/get_schedules/${profile.email}`).then(response => {\n        setSchedules(response.data); // Load schedules from the server\n      }).catch(error => {\n        console.error('Error fetching schedules:', error);\n      });\n    }\n  }, [profile]);\n\n  // Helper function to format date as YYYY-MM-DD\n  const formatDate = date => {\n    return date.toISOString().split('T')[0];\n  };\n\n  // Helper function to get the week for the current date\n  const getCurrentWeek = currentDate => {\n    const startOfWeek = new Date(currentDate);\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay());\n    const week = [];\n    for (let i = 0; i < 7; i++) {\n      const day = new Date(startOfWeek);\n      day.setDate(startOfWeek.getDate() + i);\n      week.push(day);\n    }\n    return week;\n  };\n\n  // Helper function to get days in a specific month\n  const getMonthDays = date => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const startOfMonth = new Date(year, month, 1);\n    const endOfMonth = new Date(year, month + 1, 0);\n    const days = [];\n    for (let i = 0; i < startOfMonth.getDay(); i++) {\n      days.push(null);\n    }\n    for (let day = 1; day <= endOfMonth.getDate(); day++) {\n      days.push(new Date(year, month, day));\n    }\n    return days;\n  };\n  const currentMonth = getMonthDays(currentDate);\n  const currentWeek = getCurrentWeek(currentDate);\n\n  // Handle when a time slot is clicked\n  const handleSlotClick = (minute, day) => {\n    var _schedules$dayKey;\n    const dayKey = formatDate(day);\n    const event = (_schedules$dayKey = schedules[dayKey]) === null || _schedules$dayKey === void 0 ? void 0 : _schedules$dayKey[minute];\n    if (event) {\n      setTitle(event.title);\n      setDetails(event.details);\n      setColor(event.color);\n      setStartTime({\n        minute: event.startMinute,\n        day\n      });\n      setEndTime({\n        minute: event.endMinute\n      });\n      setSelectedSlot({\n        startMinute: event.startMinute,\n        endMinute: event.endMinute,\n        day\n      });\n      setYoutubeVideoId(event.youtubeVideoId || null);\n      if (event.youtubeVideoId) {\n        setIsVideoModalOpen(true); // Open video modal if there is a YouTube video\n      } else {\n        setIsModalOpen(true); // Open the normal modal directly if there's no video\n      }\n    } else {\n      if (!startTime) {\n        // Set start time if it's not set yet\n        setStartTime({\n          minute,\n          day\n        });\n        setColor('#e81416');\n      } else if (videoDuration) {\n        // Calculate end time based on the duration and start time\n        const calculatedEndTime = minute + Math.floor(videoDuration); // Make sure we're adding in minutes\n        setEndTime({\n          minute: calculatedEndTime\n        });\n        setSelectedSlot({\n          startMinute: minute,\n          endMinute: calculatedEndTime,\n          day\n        });\n        setColor('#e81416');\n        setYoutubeVideoId(videoId);\n        setIsModalOpen(true);\n      } else if (!endTime) {\n        // For non-video scheduling\n        const nextHourMinute = Math.ceil(minute / 60) * 60; // Round to the next hour\n        setEndTime({\n          minute: nextHourMinute\n        });\n        setSelectedSlot({\n          startMinute: startTime.minute,\n          endMinute: minute,\n          day\n        });\n        setColor('#e81416');\n        setYoutubeVideoId(videoId);\n        setIsModalOpen(true);\n      }\n    }\n  };\n  const handleSaveSchedule = () => {\n    const dayKey = formatDate((selectedSlot === null || selectedSlot === void 0 ? void 0 : selectedSlot.day) || currentDate);\n    const newSchedules = {\n      ...schedules\n    };\n    const startMinute = (startTime === null || startTime === void 0 ? void 0 : startTime.minute) || 0;\n    const endMinute = (endTime === null || endTime === void 0 ? void 0 : endTime.minute) || startMinute;\n    for (let i = startMinute; i <= endMinute; i++) {\n      if (!newSchedules[dayKey]) {\n        newSchedules[dayKey] = {};\n      }\n      newSchedules[dayKey][i] = {\n        title: title,\n        details,\n        color,\n        startMinute,\n        endMinute,\n        youtubeVideoId\n      };\n    }\n    setSchedules(newSchedules);\n\n    // Save to backend\n    axios.post('http://localhost:8000/save_schedules/', {\n      gmail: profile.email,\n      schedules: newSchedules\n    }).then(response => {\n      console.log(\"Schedules saved successfully!\");\n    }).catch(error => {\n      console.error(\"Error saving schedules:\", error);\n    });\n    setIsModalOpen(false);\n    resetForm();\n  };\n  const handleDeleteSchedule = () => {\n    const dayKey = formatDate(selectedSlot.day);\n    const newSchedules = {\n      ...schedules\n    };\n    const startMinute = startTime.minute;\n    const endMinute = endTime.minute;\n\n    // Remove the schedule from the selected minutes\n    for (let i = startMinute; i <= endMinute; i++) {\n      if (newSchedules[dayKey]) {\n        delete newSchedules[dayKey][i];\n      }\n    }\n\n    // If the day has no more events, delete the day entry\n    if (Object.keys(newSchedules[dayKey]).length === 0) {\n      delete newSchedules[dayKey];\n    }\n    setSchedules(newSchedules);\n    localStorage.setItem('calendarSchedules', JSON.stringify(newSchedules)); // Update local storage\n    setIsModalOpen(false);\n    setStartTime(null);\n    setEndTime(null);\n    setTitle(\"\");\n    setDetails(\"\");\n    setColor(\"#e81416\"); // Reset to default color\n  };\n  const clearAllSchedules = () => {\n    localStorage.removeItem('calendarSchedules'); // Remove from localStorage\n    setSchedules({}); // Clear schedules from state\n  };\n  const getDaySchedules = day => {\n    const dayKey = formatDate(day);\n    const events = schedules[dayKey] || {}; // Get all events for the day\n    const uniqueEvents = [];\n    let seenTitles = new Set(); // Track titles we've already displayed\n\n    // Loop through all the minutes of the day, only taking the first event for each title\n    Object.keys(events).forEach(minuteKey => {\n      const event = events[minuteKey];\n      if (!seenTitles.has(event.title)) {\n        uniqueEvents.push(event);\n        seenTitles.add(event.title); // Mark this event as seen\n      }\n    });\n    return uniqueEvents;\n  };\n  const prevPeriod = () => {\n    const newDate = new Date(currentDate);\n    if (view === 'day') {\n      newDate.setDate(currentDate.getDate() - 1);\n    } else if (view === 'week') {\n      newDate.setDate(currentDate.getDate() - 7);\n    } else if (view === 'month') {\n      newDate.setMonth(currentDate.getMonth() - 1);\n    }\n    setCurrentDate(resetTimeToMidnight(newDate));\n  };\n  const nextPeriod = () => {\n    const newDate = new Date(currentDate);\n    if (view === 'day') {\n      newDate.setDate(currentDate.getDate() + 1);\n    } else if (view === 'week') {\n      newDate.setDate(currentDate.getDate() + 7);\n    } else if (view === 'month') {\n      newDate.setMonth(currentDate.getMonth() + 1);\n    }\n    setCurrentDate(resetTimeToMidnight(newDate));\n  };\n  const getSchedule = (day, minute) => {\n    var _schedules$dayKey2;\n    const dayKey = formatDate(day);\n    return ((_schedules$dayKey2 = schedules[dayKey]) === null || _schedules$dayKey2 === void 0 ? void 0 : _schedules$dayKey2[minute]) || {}; // Access the minute's schedule\n  };\n  const resetForm = () => {\n    setTitle(\"\"); // Reset title\n    setDetails(\"\"); // Reset details\n    setColor(\"#e81416\"); // Reset color\n    setStartTime(null); // Reset start time\n    setEndTime(null); // Reset end time\n  };\n  const onModalClose = () => {\n    setIsModalOpen(false);\n\n    // Reset modal state when closing\n    setStartTime(null);\n    setEndTime(null);\n    setTitle(\"\");\n    setDetails(\"\");\n    setColor(\"#e81416\"); // Reset to default color\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setView('day'),\n          children: \"Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setView('week'),\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setView('month'),\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: '10%'\n        },\n        onClick: prevPeriod,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '1.5%',\n          marginLeft: '1.5%',\n          marginRight: '1.5%',\n          width: '20%',\n          color: 'black',\n          fontSize: '14px',\n          backgroundColor: 'transparent'\n        },\n        children: view === 'week' ? `${currentWeek[0].toLocaleDateString('en-US', {\n          month: 'long',\n          year: 'numeric'\n        })}` : view === 'day' ? currentDate.toLocaleDateString('en-US', {\n          weekday: 'short',\n          month: 'long',\n          day: 'numeric',\n          year: 'numeric'\n        }) : currentDate.toLocaleDateString('en-US', {\n          month: 'long',\n          year: 'numeric'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: '10%',\n          margin: 'none'\n        },\n        onClick: nextPeriod,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this), (view === 'day' || view === 'week') && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\",\n      children: [view === 'week' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 37\n      }, this), \" \", view === 'week' ? currentWeek.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-header-day\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block',\n            color: 'white',\n            fontSize: '14px',\n            cursor: 'pointer'\n          },\n          className: \"calendar-day-number\",\n          onClick: () => {\n            setCurrentDate(resetTimeToMidnight(day));\n            setView('day');\n          },\n          children: day.toLocaleDateString('en-US', {\n            weekday: 'short',\n            day: 'numeric'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-header-day-day\",\n        children: currentDate.toLocaleDateString('en-US', {\n          weekday: 'short',\n          day: 'numeric'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this), view === 'month' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header-month\",\n      children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-header-day\",\n        children: day\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-body-container\",\n      children: view === 'day' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-body day-view\",\n        children: Array.from({\n          length: 24\n        }).map((_, hour) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-hour-row day-view-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-hour-label day-view-label\",\n            children: [hour, \":00\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-minute-slots day-view-slots\",\n            children: Array.from({\n              length: 60\n            }).map((_, minute) => {\n              const minuteKey = hour * 60 + minute;\n              const schedule = getSchedule(currentDate, minuteKey);\n              const isStartMinute = schedule.startMinute === minuteKey;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundColor: schedule.color || 'transparent',\n                  position: 'relative'\n                },\n                onClick: () => handleSlotClick(minuteKey, currentDate),\n                children: isStartMinute && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"event-title\",\n                  children: schedule.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 67\n                }, this)\n              }, minuteKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 33\n          }, this)]\n        }, hour, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 21\n      }, this) : view === 'week' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-body\",\n        children: Array.from({\n          length: 24\n        }).map((_, hour) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-hour-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendar-hour-label\",\n              children: [hour, \":00\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 37\n            }, this), currentWeek.map((day, dayIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendar-day-column\",\n              children: Array.from({\n                length: 60\n              }).map((_, minute) => {\n                const minuteKey = hour * 60 + minute;\n                const schedule = getSchedule(day, minuteKey);\n                const isStartMinute = schedule.startMinute === minuteKey;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"calendar-minute-slot\",\n                  style: {\n                    backgroundColor: schedule.color || 'transparent',\n                    position: 'relative',\n                    height: '0.1em'\n                  },\n                  onClick: () => handleSlotClick(minuteKey, day),\n                  children: [isStartMinute && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"event-title\",\n                    children: schedule.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 75\n                  }, this), \" \"]\n                }, minuteKey, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 53\n                }, this);\n              })\n            }, dayIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 33\n          }, this)\n        }, hour, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-body-month\",\n        children: currentMonth.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-day-month\",\n          children: day ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-day-number\",\n            style: {\n              cursor: 'pointer',\n              color: 'black'\n            },\n            onClick: () => {\n              setCurrentDate(resetTimeToMidnight(day));\n              setView('day');\n            },\n            children: [day.getDate(), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendar-day-events\",\n              children: Object.values(getDaySchedules(day)).map((event, eventIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"calendar-day-event\",\n                style: {\n                  backgroundColor: event.color,\n                  fontSize: '10px',\n                  marginTop: '2px',\n                  padding: '2px',\n                  borderRadius: '3px',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  whiteSpace: 'nowrap'\n                },\n                children: event.title\n              }, eventIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 29\n          }, this) : ''\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: onModalClose,\n      selectedSlot: selectedSlot,\n      title: title,\n      setTitle: setTitle,\n      details: details,\n      setDetails: setDetails,\n      color: color,\n      setColor: setColor,\n      startTime: startTime,\n      setStartTime: setStartTime,\n      endTime: endTime,\n      setEndTime: setEndTime,\n      youtubeVideoId: youtubeVideoId,\n      onSave: handleSaveSchedule,\n      onDelete: handleDeleteSchedule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 17\n    }, this), isVideoModalOpen && /*#__PURE__*/_jsxDEV(VideoShowcaseModal, {\n      isOpen: isVideoModalOpen,\n      onClose: () => setIsVideoModalOpen(false) // Close the video modal\n      ,\n      youtubeVideoId: youtubeVideoId,\n      onEdit: () => {\n        setIsVideoModalOpen(false); // Close the video modal\n        setIsModalOpen(true); // Open the normal modal\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 9\n  }, this);\n};\n_s(Calendar, \"gtoC/+y07NLSOqlK4eWCmFOgRoo=\", false, function () {\n  return [useSelector];\n});\n_c = Calendar;\nconst Modal = ({\n  isOpen,\n  onClose,\n  title,\n  setTitle,\n  details,\n  setDetails,\n  color,\n  setColor,\n  startTime,\n  setStartTime,\n  endTime,\n  setEndTime,\n  youtubeVideoId,\n  onSave,\n  onDelete\n}) => {\n  _s2();\n  // Define the available hour and minute options\n  const hourOptions = Array.from({\n    length: 24\n  }, (_, index) => index); // 0-23 hours\n  const minuteOptions = Array.from({\n    length: 60\n  }, (_, index) => index); // 0-59 minutes\n\n  const handleStartTimeChange = (hour, minute) => {\n    const startMinute = hour * 60 + minute;\n    setStartTime({\n      minute: startMinute\n    });\n  };\n  const handleEndTimeChange = (hour, minute) => {\n    const endMinute = hour * 60 + minute;\n    setEndTime({\n      minute: endMinute\n    });\n  };\n  const getHourAndMinute = totalMinutes => {\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = totalMinutes % 60;\n    return {\n      hours,\n      minutes\n    };\n  };\n\n  // If startTime and endTime are set, extract the hours and minutes\n  const {\n    hours: startHour,\n    minutes: startMinute\n  } = startTime ? getHourAndMinute(startTime.minute) : {\n    hours: '',\n    minutes: ''\n  };\n  const {\n    hours: endHour,\n    minutes: endMinute\n  } = endTime ? getHourAndMinute(endTime.minute) : {\n    hours: '',\n    minutes: ''\n  };\n  const colorPresets = ['#e81416', '#ffa500', '#faeb36', '#79c314', '#487de7', '#4b369d', '#70369d'];\n  useEffect(() => {\n    if (!color) {\n      setColor('#e81416');\n    }\n  }, [color, setColor]);\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Schedule for \", title || \"Untitled\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Event Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textarea_youtube_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: details,\n          onChange: e => setDetails(e.target.value),\n          placeholder: \"Enter event details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 21\n        }, this), youtubeVideoId && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"youtube-video\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: `https://www.youtube.com/embed/${youtubeVideoId}`,\n            frameBorder: \"0\",\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true,\n            title: title,\n            className: \"video-display\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-selection-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: startHour,\n          onChange: e => handleStartTimeChange(parseInt(e.target.value), startMinute),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select Hour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 25\n          }, this), hourOptions.map(hour => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: hour,\n            children: hour\n          }, hour, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: startMinute,\n          onChange: e => handleStartTimeChange(startHour, parseInt(e.target.value)),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select Minute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 25\n          }, this), minuteOptions.map(minute => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: minute,\n            children: minute\n          }, minute, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-selection-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: endHour,\n          onChange: e => handleEndTimeChange(parseInt(e.target.value), endMinute),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select Hour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 25\n          }, this), hourOptions.map(hour => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: hour,\n            children: hour\n          }, hour, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: endMinute,\n          onChange: e => handleEndTimeChange(endHour, parseInt(e.target.value)),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select Minute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 25\n          }, this), minuteOptions.map(minute => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: minute,\n            children: minute\n          }, minute, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-preset-container\",\n        children: [colorPresets.map((preset, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-preset\",\n          style: {\n            backgroundColor: preset,\n            border: color === preset ? '2px solid black' : 'none' // Highlight selected color\n          },\n          onClick: () => setColor(preset) // Set selected color\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color,\n          onChange: e => setColor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions-left\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            style: {\n              width: '100%'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onDelete,\n            style: {\n              width: '40%'\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onSave,\n            style: {\n              width: '40%'\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 528,\n    columnNumber: 9\n  }, this);\n};\n_s2(Modal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = Modal;\nconst VideoShowcaseModal = ({\n  isOpen,\n  onClose,\n  youtubeVideoId,\n  onEdit\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay-youtube\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content-youtube\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"youtube-video\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: `https://www.youtube.com/embed/${youtubeVideoId}`,\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true,\n          title: \"Event Video\",\n          className: \"video-display2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            style: {\n              width: '30%'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onEdit,\n            style: {\n              width: '30%'\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 640,\n    columnNumber: 9\n  }, this);\n};\n_c3 = VideoShowcaseModal;\nexport default Calendar;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Calendar\");\n$RefreshReg$(_c2, \"Modal\");\n$RefreshReg$(_c3, \"VideoShowcaseModal\");","map":{"version":3,"names":["React","useState","useEffect","axios","useSelector","jsxDEV","_jsxDEV","resetTimeToMidnight","date","newDate","Date","setHours","Calendar","onSelectSlot","videoTitle","videoDuration","videoId","_s","profile","state","currentDate","setCurrentDate","view","setView","isModalOpen","setIsModalOpen","selectedSlot","setSelectedSlot","title","setTitle","details","setDetails","color","setColor","schedules","setSchedules","startTime","setStartTime","endTime","setEndTime","youtubeVideoId","setYoutubeVideoId","isVideoModalOpen","setIsVideoModalOpen","minute","undefined","calculatedEndTime","Math","floor","storedSchedules","localStorage","getItem","JSON","parse","email","get","then","response","data","catch","error","console","formatDate","toISOString","split","getCurrentWeek","startOfWeek","setDate","getDate","getDay","week","i","day","push","getMonthDays","year","getFullYear","month","getMonth","startOfMonth","endOfMonth","days","currentMonth","currentWeek","handleSlotClick","_schedules$dayKey","dayKey","event","startMinute","endMinute","nextHourMinute","ceil","handleSaveSchedule","newSchedules","post","gmail","log","resetForm","handleDeleteSchedule","Object","keys","length","setItem","stringify","clearAllSchedules","removeItem","getDaySchedules","events","uniqueEvents","seenTitles","Set","forEach","minuteKey","has","add","prevPeriod","setMonth","nextPeriod","getSchedule","_schedules$dayKey2","onModalClose","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","width","display","justifyContent","marginTop","marginLeft","marginRight","fontSize","backgroundColor","toLocaleDateString","weekday","margin","map","index","cursor","Array","from","_","hour","schedule","isStartMinute","position","Fragment","dayIndex","height","values","eventIndex","padding","borderRadius","overflow","textOverflow","whiteSpace","Modal","isOpen","onClose","onSave","onDelete","VideoShowcaseModal","onEdit","_c","_s2","hourOptions","minuteOptions","handleStartTimeChange","handleEndTimeChange","getHourAndMinute","totalMinutes","hours","minutes","startHour","endHour","colorPresets","type","value","onChange","e","target","placeholder","src","frameBorder","allow","allowFullScreen","parseInt","disabled","preset","border","_c2","_c3","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/Web_pro_2024/web_pro/src/components/Calendar/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Calendar.css';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// Helper function to reset the time of a Date object to midnight\r\nconst resetTimeToMidnight = (date) => {\r\n    const newDate = new Date(date);\r\n    newDate.setHours(0, 0, 0, 0); // Set time to 00:00:00\r\n    return newDate;\r\n};\r\n\r\n\r\nconst Calendar = ({ onSelectSlot = () => {}, videoTitle = null, videoDuration = null , videoId = null}) => {\r\n\r\n    const profile = useSelector(state => state.profile);\r\n\r\n    const [currentDate, setCurrentDate] = useState(resetTimeToMidnight(new Date()));\r\n    const [view, setView] = useState('week');\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [selectedSlot, setSelectedSlot] = useState(null);\r\n    const [title, setTitle] = useState(videoTitle || \"\");\r\n    const [details, setDetails] = useState(\"\");\r\n    const [color, setColor] = useState(\"#e81416\");\r\n    const [schedules, setSchedules] = useState({}); // Store schedules in an object\r\n    const [startTime, setStartTime] = useState(null);\r\n    const [endTime, setEndTime] = useState(null);\r\n    const [youtubeVideoId, setYoutubeVideoId] = useState(videoId || null);\r\n    const [isVideoModalOpen, setIsVideoModalOpen] = useState(false); // State for the video modal\r\n\r\n\r\n    // Auto-calculate endTime if videoDuration is provided\r\n    useEffect(() => {\r\n        if (videoDuration && startTime && startTime.minute !== undefined) {\r\n            const calculatedEndTime = startTime.minute + Math.floor(videoDuration); // Ensure videoDuration is in minutes\r\n            setEndTime({ minute: calculatedEndTime });\r\n        }\r\n    }, [videoDuration, startTime]); \r\n\r\n    // Load schedules from local storage when component mounts\r\n    useEffect(() => {\r\n        const storedSchedules = localStorage.getItem('calendarSchedules');\r\n        if (storedSchedules) {\r\n            setSchedules(JSON.parse(storedSchedules));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (profile && profile.email) {\r\n            // Fetch the schedules for the logged-in user\r\n            axios.get(`http://localhost:8000/get_schedules/${profile.email}`)\r\n                .then(response => {\r\n                    setSchedules(response.data);  // Load schedules from the server\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching schedules:', error);\r\n                });\r\n        }\r\n    }, [profile]);\r\n    \r\n\r\n    // Helper function to format date as YYYY-MM-DD\r\n    const formatDate = (date) => {\r\n        return date.toISOString().split('T')[0];\r\n    };\r\n\r\n    // Helper function to get the week for the current date\r\n    const getCurrentWeek = (currentDate) => {\r\n        const startOfWeek = new Date(currentDate);\r\n        startOfWeek.setDate(currentDate.getDate() - currentDate.getDay());\r\n        const week = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            const day = new Date(startOfWeek);\r\n            day.setDate(startOfWeek.getDate() + i);\r\n            week.push(day);\r\n        }\r\n        return week;\r\n    };\r\n\r\n    // Helper function to get days in a specific month\r\n    const getMonthDays = (date) => {\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth();\r\n        const startOfMonth = new Date(year, month, 1);\r\n        const endOfMonth = new Date(year, month + 1, 0);\r\n\r\n        const days = [];\r\n        for (let i = 0; i < startOfMonth.getDay(); i++) {\r\n            days.push(null);\r\n        }\r\n\r\n        for (let day = 1; day <= endOfMonth.getDate(); day++) {\r\n            days.push(new Date(year, month, day));\r\n        }\r\n\r\n        return days;\r\n    };\r\n\r\n    const currentMonth = getMonthDays(currentDate);\r\n    const currentWeek = getCurrentWeek(currentDate);\r\n\r\n    // Handle when a time slot is clicked\r\n    const handleSlotClick = (minute, day) => {\r\n        const dayKey = formatDate(day);\r\n        const event = schedules[dayKey]?.[minute]; \r\n\r\n        if(event){\r\n            setTitle(event.title);\r\n            setDetails(event.details);\r\n            setColor(event.color);\r\n            setStartTime({ minute: event.startMinute, day });\r\n            setEndTime({ minute: event.endMinute });\r\n            setSelectedSlot({ startMinute: event.startMinute, endMinute: event.endMinute, day });\r\n            setYoutubeVideoId(event.youtubeVideoId || null);\r\n            \r\n            if (event.youtubeVideoId) {\r\n                setIsVideoModalOpen(true);  // Open video modal if there is a YouTube video\r\n            } else {\r\n                setIsModalOpen(true);  // Open the normal modal directly if there's no video\r\n            }\r\n        }\r\n        else{\r\n            if (!startTime) {\r\n                // Set start time if it's not set yet\r\n                setStartTime({ minute, day });\r\n                setColor('#e81416');\r\n            } else if (videoDuration) {\r\n                // Calculate end time based on the duration and start time\r\n                const calculatedEndTime = minute + Math.floor(videoDuration);  // Make sure we're adding in minutes\r\n                setEndTime({ minute: calculatedEndTime });\r\n                setSelectedSlot({ startMinute: minute, endMinute: calculatedEndTime, day });\r\n                setColor('#e81416');\r\n                setYoutubeVideoId(videoId);\r\n                setIsModalOpen(true);\r\n\r\n            } else if (!endTime) {\r\n                // For non-video scheduling\r\n                const nextHourMinute = Math.ceil(minute / 60) * 60; // Round to the next hour\r\n                setEndTime({ minute: nextHourMinute });\r\n                setSelectedSlot({ startMinute: startTime.minute, endMinute: minute, day });\r\n                setColor('#e81416');\r\n                setYoutubeVideoId(videoId);\r\n                setIsModalOpen(true);\r\n            }\r\n        }\r\n        \r\n    };\r\n    \r\n\r\n    const handleSaveSchedule = () => {\r\n        const dayKey = formatDate(selectedSlot?.day || currentDate);\r\n        const newSchedules = { ...schedules };\r\n    \r\n        const startMinute = startTime?.minute || 0;\r\n        const endMinute = endTime?.minute || startMinute;\r\n    \r\n        for (let i = startMinute; i <= endMinute; i++) {\r\n            if (!newSchedules[dayKey]) {\r\n                newSchedules[dayKey] = {};\r\n            }\r\n            newSchedules[dayKey][i] = {\r\n                title: title,\r\n                details,\r\n                color,\r\n                startMinute,\r\n                endMinute,\r\n                youtubeVideoId,\r\n            };\r\n        }\r\n    \r\n        setSchedules(newSchedules);\r\n    \r\n        // Save to backend\r\n        axios.post('http://localhost:8000/save_schedules/', {\r\n            gmail: profile.email,\r\n            schedules: newSchedules\r\n        })\r\n        .then(response => {\r\n            console.log(\"Schedules saved successfully!\");\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error saving schedules:\", error);\r\n        });\r\n    \r\n        setIsModalOpen(false);\r\n        resetForm();\r\n    };\r\n    \r\n\r\n    const handleDeleteSchedule = () => {\r\n        const dayKey = formatDate(selectedSlot.day);\r\n        const newSchedules = { ...schedules };\r\n\r\n        const startMinute = startTime.minute;\r\n        const endMinute = endTime.minute;\r\n\r\n        // Remove the schedule from the selected minutes\r\n        for (let i = startMinute; i <= endMinute; i++) {\r\n            if (newSchedules[dayKey]) {\r\n                delete newSchedules[dayKey][i];\r\n            }\r\n        }\r\n\r\n        // If the day has no more events, delete the day entry\r\n        if (Object.keys(newSchedules[dayKey]).length === 0) {\r\n            delete newSchedules[dayKey];\r\n        }\r\n\r\n        setSchedules(newSchedules);\r\n        localStorage.setItem('calendarSchedules', JSON.stringify(newSchedules)); // Update local storage\r\n        setIsModalOpen(false);\r\n        setStartTime(null);\r\n        setEndTime(null);\r\n        setTitle(\"\");\r\n        setDetails(\"\");\r\n        setColor(\"#e81416\"); // Reset to default color\r\n    };\r\n\r\n    const clearAllSchedules = () => {\r\n        localStorage.removeItem('calendarSchedules'); // Remove from localStorage\r\n        setSchedules({}); // Clear schedules from state\r\n    };\r\n\r\n    const getDaySchedules = (day) => {\r\n        const dayKey = formatDate(day);\r\n        const events = schedules[dayKey] || {}; // Get all events for the day\r\n        const uniqueEvents = [];\r\n\r\n        let seenTitles = new Set(); // Track titles we've already displayed\r\n\r\n        // Loop through all the minutes of the day, only taking the first event for each title\r\n        Object.keys(events).forEach((minuteKey) => {\r\n            const event = events[minuteKey];\r\n            if (!seenTitles.has(event.title)) {\r\n                uniqueEvents.push(event);\r\n                seenTitles.add(event.title); // Mark this event as seen\r\n            }\r\n        });\r\n\r\n        return uniqueEvents;\r\n    };\r\n\r\n    const prevPeriod = () => {\r\n        const newDate = new Date(currentDate);\r\n        if (view === 'day') {\r\n            newDate.setDate(currentDate.getDate() - 1);\r\n        } else if (view === 'week') {\r\n            newDate.setDate(currentDate.getDate() - 7);\r\n        } else if (view === 'month') {\r\n            newDate.setMonth(currentDate.getMonth() - 1);\r\n        }\r\n        setCurrentDate(resetTimeToMidnight(newDate));\r\n    };\r\n\r\n    const nextPeriod = () => {\r\n        const newDate = new Date(currentDate);\r\n        if (view === 'day') {\r\n            newDate.setDate(currentDate.getDate() + 1);\r\n        } else if (view === 'week') {\r\n            newDate.setDate(currentDate.getDate() + 7);\r\n        } else if (view === 'month') {\r\n            newDate.setMonth(currentDate.getMonth() + 1);\r\n        }\r\n        setCurrentDate(resetTimeToMidnight(newDate));\r\n    };\r\n\r\n    const getSchedule = (day, minute) => {\r\n        const dayKey = formatDate(day);\r\n        return schedules[dayKey]?.[minute] || {}; // Access the minute's schedule\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setTitle(\"\");       // Reset title\r\n        setDetails(\"\");     // Reset details\r\n        setColor(\"#e81416\"); // Reset color\r\n        setStartTime(null); // Reset start time\r\n        setEndTime(null);   // Reset end time\r\n    };\r\n    \r\n\r\n    const onModalClose = () => {\r\n        setIsModalOpen(false);\r\n\r\n        // Reset modal state when closing\r\n        setStartTime(null);\r\n        setEndTime(null);\r\n        setTitle(\"\");\r\n        setDetails(\"\");\r\n        setColor(\"#e81416\"); // Reset to default color\r\n    };\r\n    \r\n\r\n    return (\r\n        <div className=\"calendar\">\r\n            <div className=\"calendar-controls\">\r\n                <div className=\"view-buttons\">\r\n                    <button onClick={() => setView('day')}>Day</button>\r\n                    <button onClick={() => setView('week')}>Week</button>\r\n                    <button onClick={() => setView('month')}>Month</button>\r\n                </div>\r\n                <button style={{ width: '10%',}} onClick={prevPeriod}>&lt;</button>\r\n                <div style={{ display: 'flex', justifyContent: 'center',marginTop: '1.5%',marginLeft: '1.5%',marginRight:'1.5%',width: '20%',color: 'black', fontSize: '14px', backgroundColor: 'transparent' }}>\r\n                {view === 'week' \r\n                    ? `${currentWeek[0].toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}`\r\n                    : view === 'day' \r\n                    ? currentDate.toLocaleDateString('en-US', { weekday: 'short', month: 'long', day: 'numeric', year: 'numeric' }) \r\n                    : currentDate.toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}\r\n                </div>\r\n                <button style={{ width: '10%', margin: 'none'}} onClick={nextPeriod}>&gt;</button>\r\n            </div>\r\n            {(view === 'day' || view === 'week') && (\r\n            <div className=\"calendar-header\">\r\n                {view === 'week' && <div className=\"empty-column\"></div>} {/* Only show empty column for 'week' view */}\r\n                {view === 'week' ? (\r\n                currentWeek.map((day, index) => (\r\n                    <div key={index} className=\"calendar-header-day\">\r\n                    <div\r\n                        style={{\r\n                        display: 'inline-block',\r\n                        color: 'white',\r\n                        fontSize: '14px',\r\n                        cursor: 'pointer',\r\n                        }}\r\n                        className=\"calendar-day-number\"\r\n                        onClick={() => {\r\n                        setCurrentDate(resetTimeToMidnight(day));\r\n                        setView('day');\r\n                        }}\r\n                    >\r\n                        {day.toLocaleDateString('en-US', { weekday: 'short', day: 'numeric' })}\r\n                    </div>\r\n                    </div>\r\n                ))\r\n                ) : (\r\n                <div className=\"calendar-header-day-day\">\r\n                    {currentDate.toLocaleDateString('en-US', { weekday: 'short', day: 'numeric' })}\r\n                </div>\r\n                )}\r\n            </div>\r\n            )}\r\n            {view === 'month' && (\r\n            <div className=\"calendar-header-month\">\r\n                {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map((day, index) => (\r\n                <div key={index} className=\"calendar-header-day\">{day}</div>\r\n                ))}\r\n            </div>\r\n            )}\r\n\r\n            <div className=\"calendar-body-container\">\r\n                {view === 'day' ? (\r\n                    <div className=\"calendar-body day-view\">\r\n                        {Array.from({ length: 24 }).map((_, hour) => (\r\n                            <div className=\"calendar-hour-row day-view-row\" key={hour}>\r\n                                <div className=\"calendar-hour-label day-view-label\">\r\n                                    {hour}:00\r\n                                </div>\r\n                                <div className=\"calendar-minute-slots day-view-slots\">\r\n                                    {Array.from({ length: 60 }).map((_, minute) => {\r\n                                        const minuteKey = hour * 60 + minute;\r\n                                        const schedule = getSchedule(currentDate, minuteKey);\r\n                                        const isStartMinute = schedule.startMinute === minuteKey;\r\n\r\n                                        return (\r\n                                            <div key={minuteKey}\r\n                                                style={{\r\n                                                    backgroundColor: schedule.color || 'transparent',\r\n                                                    position: 'relative'\r\n                                                }}\r\n                                                onClick={() => handleSlotClick(minuteKey, currentDate)}>\r\n                                                {isStartMinute && <div className=\"event-title\">{schedule.title}</div>}\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : view === 'week' ? (\r\n                    <div className=\"calendar-body\">\r\n                        {Array.from({ length: 24 }).map((_, hour) => (\r\n                            <React.Fragment key={hour}>\r\n                                <div className=\"calendar-hour-row\">\r\n                                    <div className=\"calendar-hour-label\">{hour}:00</div>\r\n                                    {currentWeek.map((day, dayIndex) => (\r\n                                        <div key={dayIndex} className=\"calendar-day-column\">\r\n                                            {Array.from({ length: 60 }).map((_, minute) => {\r\n                                                const minuteKey = hour * 60 + minute;\r\n                                                const schedule = getSchedule(day, minuteKey);\r\n                                                const isStartMinute = schedule.startMinute === minuteKey;\r\n\r\n                                                return (\r\n                                                    <div key={minuteKey} className=\"calendar-minute-slot\"\r\n                                                        style={{\r\n                                                            backgroundColor: schedule.color || 'transparent',\r\n                                                            position: 'relative',\r\n                                                            height: '0.1em',\r\n                                                        }}\r\n                                                        onClick={() => handleSlotClick(minuteKey, day)}>\r\n                                                        {isStartMinute && <div className=\"event-title\">{schedule.title}</div>} {/* Show title only at the start minute */}\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"calendar-body-month\">\r\n                {currentMonth.map((day, index) => (\r\n                    <div key={index} className=\"calendar-day-month\">\r\n                        {day ? (\r\n                            <div className=\"calendar-day-number\" style={{ cursor: 'pointer', color: 'black' }}  onClick={() => {\r\n                                setCurrentDate(resetTimeToMidnight(day));\r\n                                setView('day');\r\n                            }}>\r\n                                {day.getDate()}\r\n                                <div className=\"calendar-day-events\" >\r\n                                    {/* Display all events for this day */}\r\n                                    {Object.values(getDaySchedules(day)).map((event, eventIndex) => (\r\n                                        <div\r\n                                            key={eventIndex}\r\n                                            className=\"calendar-day-event\"\r\n                                            style={{\r\n                                                backgroundColor: event.color,\r\n                                                fontSize: '10px',\r\n                                                marginTop: '2px',\r\n                                                padding: '2px',\r\n                                                borderRadius: '3px',\r\n                                                overflow: 'hidden',\r\n                                                textOverflow: 'ellipsis',\r\n                                                whiteSpace: 'nowrap',\r\n                                            }}\r\n                                        >\r\n                                            {event.title}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ) : ''}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n                )}\r\n            </div>\r\n            \r\n\r\n            {/* Modal */}\r\n            {isModalOpen && (\r\n                <Modal\r\n                    isOpen={isModalOpen}\r\n                    onClose={onModalClose}\r\n                    selectedSlot={selectedSlot}\r\n                    title={title}\r\n                    setTitle={setTitle}\r\n                    details={details}\r\n                    setDetails={setDetails}\r\n                    color={color}\r\n                    setColor={setColor}\r\n                    startTime={startTime}\r\n                    setStartTime={setStartTime}\r\n                    endTime={endTime}\r\n                    setEndTime={setEndTime}\r\n                    youtubeVideoId={youtubeVideoId}\r\n                    onSave={handleSaveSchedule}\r\n                    onDelete={handleDeleteSchedule}\r\n                />\r\n            )}\r\n\r\n            {isVideoModalOpen && (\r\n                <VideoShowcaseModal\r\n                    isOpen={isVideoModalOpen}\r\n                    onClose={() => setIsVideoModalOpen(false)}  // Close the video modal\r\n                    youtubeVideoId={youtubeVideoId}\r\n                    onEdit={() => {\r\n                        setIsVideoModalOpen(false);  // Close the video modal\r\n                        setIsModalOpen(true);  // Open the normal modal\r\n                    }}\r\n                />\r\n            )}\r\n\r\n\r\n        </div>\r\n        \r\n        \r\n    );\r\n};\r\n\r\n\r\nconst Modal = ({ isOpen, onClose, title, setTitle, details, setDetails, color, setColor, startTime, setStartTime, endTime, setEndTime, youtubeVideoId, onSave, onDelete }) => {\r\n    \r\n\r\n    // Define the available hour and minute options\r\n    const hourOptions = Array.from({ length: 24 }, (_, index) => index); // 0-23 hours\r\n    const minuteOptions = Array.from({ length: 60 }, (_, index) => index); // 0-59 minutes\r\n\r\n    const handleStartTimeChange = (hour, minute) => {\r\n        const startMinute = hour * 60 + minute;\r\n        setStartTime({ minute: startMinute });\r\n    };\r\n\r\n    const handleEndTimeChange = (hour, minute) => {\r\n        const endMinute = hour * 60 + minute;\r\n        setEndTime({ minute: endMinute });\r\n    };\r\n\r\n    const getHourAndMinute = (totalMinutes) => {\r\n        const hours = Math.floor(totalMinutes / 60);\r\n        const minutes = totalMinutes % 60;\r\n        return { hours, minutes };\r\n    };\r\n\r\n    // If startTime and endTime are set, extract the hours and minutes\r\n    const { hours: startHour, minutes: startMinute } = startTime ? getHourAndMinute(startTime.minute) : { hours: '', minutes: '' };\r\n    const { hours: endHour, minutes: endMinute } = endTime ? getHourAndMinute(endTime.minute) : { hours: '', minutes: '' };\r\n\r\n    const colorPresets = ['#e81416', '#ffa500', '#faeb36', '#79c314', '#487de7', '#4b369d', '#70369d'];\r\n    useEffect(() => {\r\n        if (!color) {\r\n            setColor('#e81416');\r\n        }\r\n    }, [color, setColor]);\r\n\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            <div className=\"modal-content\">\r\n                <h2>Schedule for {title || \"Untitled\"}</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    placeholder=\"Event Title\"\r\n                />\r\n\r\n                <div className=\"textarea_youtube_container\">\r\n                    <textarea\r\n                        value={details}\r\n                        onChange={(e) => setDetails(e.target.value)}\r\n                        placeholder=\"Enter event details\"\r\n                    ></textarea>\r\n\r\n                    {youtubeVideoId && (\r\n                        <div className=\"youtube-video\">\r\n                            <iframe\r\n                                src={`https://www.youtube.com/embed/${youtubeVideoId}`}\r\n                                frameBorder=\"0\"\r\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                allowFullScreen\r\n                                title={title}\r\n                                className=\"video-display\"\r\n                            ></iframe>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                \r\n                <label>Start Time:</label>\r\n                <div className=\"time-selection-container\">\r\n                    <select\r\n                        value={startHour}\r\n                        onChange={(e) => handleStartTimeChange(parseInt(e.target.value), startMinute)}\r\n                    >\r\n                        <option value=\"\" disabled>Select Hour</option>\r\n                        {hourOptions.map((hour) => (\r\n                            <option key={hour} value={hour}>{hour}</option>\r\n                        ))}\r\n                    </select>\r\n                    <select\r\n                        value={startMinute}\r\n                        onChange={(e) => handleStartTimeChange(startHour, parseInt(e.target.value))}\r\n                    >\r\n                        <option value=\"\" disabled>Select Minute</option>\r\n                        {minuteOptions.map((minute) => (\r\n                            <option key={minute} value={minute}>{minute}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <label>End Time:</label>\r\n                <div className=\"time-selection-container\">\r\n                    <select\r\n                        value={endHour}\r\n                        onChange={(e) => handleEndTimeChange(parseInt(e.target.value), endMinute)}\r\n                    >\r\n                        <option value=\"\" disabled>Select Hour</option>\r\n                        {hourOptions.map((hour) => (\r\n                            <option key={hour} value={hour}>{hour}</option>\r\n                        ))}\r\n                    </select>\r\n                    <select\r\n                        value={endMinute}\r\n                        onChange={(e) => handleEndTimeChange(endHour, parseInt(e.target.value))}\r\n                    >\r\n                        <option value=\"\" disabled>Select Minute</option>\r\n                        {minuteOptions.map((minute) => (\r\n                            <option key={minute} value={minute}>{minute}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"color-preset-container\">\r\n                    {colorPresets.map((preset, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className=\"color-preset\"\r\n                            style={{\r\n                                backgroundColor: preset,\r\n                                border: color === preset ? '2px solid black' : 'none' // Highlight selected color\r\n                            }}\r\n                            onClick={() => setColor(preset)} // Set selected color\r\n                        ></div>\r\n                    ))}\r\n                    <input\r\n                        type=\"color\"\r\n                        value={color}\r\n                        onChange={(e) => setColor(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"modal-actions-container\">\r\n                    <div className=\"modal-actions-left\">\r\n                        <button onClick={onClose} style={{ width: '100%'}}>Cancel</button>\r\n                    </div>\r\n                    <div className='modal-actions-right'>\r\n                        <button onClick={onDelete} style={{ width: '40%'}}>Delete</button>\r\n                        <button onClick={onSave} style={{ width: '40%'}}>Save</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst VideoShowcaseModal = ({ isOpen, onClose, youtubeVideoId, onEdit }) => {\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <div className=\"modal-overlay-youtube\">\r\n            <div className=\"modal-content-youtube\">\r\n                <div className=\"youtube-video\">\r\n                    <iframe\r\n                        src={`https://www.youtube.com/embed/${youtubeVideoId}`}\r\n                        frameBorder=\"0\"\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                        allowFullScreen\r\n                        title=\"Event Video\"\r\n                        className=\"video-display2\"\r\n                    ></iframe>\r\n                </div>\r\n\r\n                <div className=\"modal-actions-container\">\r\n                    <div className=\"modal-actions-left\">\r\n                    </div>\r\n                    <div className='modal-actions-right'>\r\n                        <button onClick={onClose} style={{ width: '30%' }}>Cancel</button>\r\n                        <button onClick={onEdit} style={{ width: '30%' }}>Edit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Calendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}